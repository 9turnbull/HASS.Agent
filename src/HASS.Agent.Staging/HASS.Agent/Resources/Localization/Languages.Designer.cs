//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HASS.Agent.Resources.Localization {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Languages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Languages() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HASS.Agent.Resources.Localization.Languages", typeof(Languages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Close.
        /// </summary>
        internal static string About_BtnClose {
            get {
                return ResourceManager.GetString("About_BtnClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A Windows-based client for the Home Assistant platform..
        /// </summary>
        internal static string About_LblInfo1 {
            get {
                return ResourceManager.GetString("About_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Created with love by.
        /// </summary>
        internal static string About_LblInfo2 {
            get {
                return ResourceManager.GetString("About_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This application is open source and completely free, please check the project pages of 
        ///the used components for their individual licenses:.
        /// </summary>
        internal static string About_LblInfo3 {
            get {
                return ResourceManager.GetString("About_LblInfo3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A big &apos;thank you&apos; to the developers of these projects, who were kind enough to share
        ///their hard work with the rest of us mere mortals. .
        /// </summary>
        internal static string About_LblInfo4 {
            get {
                return ResourceManager.GetString("About_LblInfo4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à And of course; thanks to Paulus Shoutsen and the entire team of developers that 
        ///created and maintain Home Assistant :-).
        /// </summary>
        internal static string About_LblInfo5 {
            get {
                return ResourceManager.GetString("About_LblInfo5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Like this tool? Support us (read: keep us awake) by buying a cup of coffee:.
        /// </summary>
        internal static string About_LblInfo6 {
            get {
                return ResourceManager.GetString("About_LblInfo6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à or.
        /// </summary>
        internal static string About_LblOr {
            get {
                return ResourceManager.GetString("About_LblOr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à About.
        /// </summary>
        internal static string About_Title {
            get {
                return ResourceManager.GetString("About_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Button.
        /// </summary>
        internal static string CommandEntityType_Button {
            get {
                return ResourceManager.GetString("CommandEntityType_Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Light.
        /// </summary>
        internal static string CommandEntityType_Light {
            get {
                return ResourceManager.GetString("CommandEntityType_Light", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Lock.
        /// </summary>
        internal static string CommandEntityType_Lock {
            get {
                return ResourceManager.GetString("CommandEntityType_Lock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Siren.
        /// </summary>
        internal static string CommandEntityType_Siren {
            get {
                return ResourceManager.GetString("CommandEntityType_Siren", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Switch.
        /// </summary>
        internal static string CommandEntityType_Switch {
            get {
                return ResourceManager.GetString("CommandEntityType_Switch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Close.
        /// </summary>
        internal static string CommandMqttTopic_BtnClose {
            get {
                return ResourceManager.GetString("CommandMqttTopic_BtnClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Copy &amp;to Clipboard.
        /// </summary>
        internal static string CommandMqttTopic_BtnCopyClipboard {
            get {
                return ResourceManager.GetString("CommandMqttTopic_BtnCopyClipboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Topic copied to clipboard!.
        /// </summary>
        internal static string CommandMqttTopic_BtnCopyClipboard_Copied {
            get {
                return ResourceManager.GetString("CommandMqttTopic_BtnCopyClipboard_Copied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à help and examples.
        /// </summary>
        internal static string CommandMqttTopic_LblHelp {
            get {
                return ResourceManager.GetString("CommandMqttTopic_LblHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This is the MQTT topic on which you can publish action commands:.
        /// </summary>
        internal static string CommandMqttTopic_LblInfo1 {
            get {
                return ResourceManager.GetString("CommandMqttTopic_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MQTT Action Topic.
        /// </summary>
        internal static string CommandMqttTopic_Title {
            get {
                return ResourceManager.GetString("CommandMqttTopic_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Add New.
        /// </summary>
        internal static string CommandsConfig_BtnAdd {
            get {
                return ResourceManager.GetString("CommandsConfig_BtnAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Modify.
        /// </summary>
        internal static string CommandsConfig_BtnModify {
            get {
                return ResourceManager.GetString("CommandsConfig_BtnModify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Remove.
        /// </summary>
        internal static string CommandsConfig_BtnRemove {
            get {
                return ResourceManager.GetString("CommandsConfig_BtnRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Store and Activate Commands.
        /// </summary>
        internal static string CommandsConfig_BtnStore {
            get {
                return ResourceManager.GetString("CommandsConfig_BtnStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An error occurred whilst saving commands, please check the logs for more information..
        /// </summary>
        internal static string CommandsConfig_BtnStore_MessageBox1 {
            get {
                return ResourceManager.GetString("CommandsConfig_BtnStore_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Storing and registering, please wait...
        /// </summary>
        internal static string CommandsConfig_BtnStore_Storing {
            get {
                return ResourceManager.GetString("CommandsConfig_BtnStore_Storing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Name.
        /// </summary>
        internal static string CommandsConfig_ClmName {
            get {
                return ResourceManager.GetString("CommandsConfig_ClmName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Type.
        /// </summary>
        internal static string CommandsConfig_ClmType {
            get {
                return ResourceManager.GetString("CommandsConfig_ClmType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Action.
        /// </summary>
        internal static string CommandsConfig_LblActionInfo {
            get {
                return ResourceManager.GetString("CommandsConfig_LblActionInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Low Integrity.
        /// </summary>
        internal static string CommandsConfig_LblLowIntegrity {
            get {
                return ResourceManager.GetString("CommandsConfig_LblLowIntegrity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Commands Config.
        /// </summary>
        internal static string CommandsConfig_Title {
            get {
                return ResourceManager.GetString("CommandsConfig_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Looks for the specified process, and tries to send its main window to the front.
        ///
        ///If the application is minimized, it&apos;ll get restored.
        ///
        ///Example: if you want to send VLC to the foreground, use &apos;vlc&apos;..
        /// </summary>
        internal static string CommandsManager_CommandsManager_SendWindowToFrontCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_CommandsManager_SendWindowToFrontCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Execute a custom command.
        ///
        ///These commands run without special elevation. To run elevated, create a Scheduled Task, and use &apos;schtasks /Run /TN &quot;TaskName&quot;&apos; as the command to execute your task.
        ///
        ///Or enable &apos;run as low integrity&apos; for even stricter execution..
        /// </summary>
        internal static string CommandsManager_CustomCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_CustomCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Executes the command through the configured custom executor (in Configuration -&gt; External Tools).
        ///
        ///Your command is provided as an argument &apos;as is&apos;, so you have to supply your own quotes etc. if necessary..
        /// </summary>
        internal static string CommandsManager_CustomExecutorCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_CustomExecutorCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sets the machine in hibernation..
        /// </summary>
        internal static string CommandsManager_HibernateCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_HibernateCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Simulates a single keypress.
        ///
        ///Click on the &apos;keycode&apos; textbox and press the key you want simulated. The corresponding keycode will be entered for you.
        ///
        ///If you need more keys and/or modifiers like CTRL, use the MultipleKeys command..
        /// </summary>
        internal static string CommandsManager_KeyCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_KeyCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Launches the provided URL, by default in your default browser.
        ///
        ///To use &apos;incognito&apos;, provide a specific browser in Configuration -&gt; External Tools.
        ///
        ///If you just want a window with a specific URL (not an entire browser), use a &apos;WebView&apos; command..
        /// </summary>
        internal static string CommandsManager_LaunchUrlCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_LaunchUrlCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Locks the current session..
        /// </summary>
        internal static string CommandsManager_LockCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_LockCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Logs off the current session..
        /// </summary>
        internal static string CommandsManager_LogOffCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_LogOffCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Simulates &apos;Mute&apos; key..
        /// </summary>
        internal static string CommandsManager_MediaMuteCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_MediaMuteCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Simulates &apos;Media Next&apos; key..
        /// </summary>
        internal static string CommandsManager_MediaNextCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_MediaNextCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Simulates &apos;Media Pause/Play&apos; key..
        /// </summary>
        internal static string CommandsManager_MediaPlayPauseCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_MediaPlayPauseCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Simulates &apos;Media Previous&apos; key..
        /// </summary>
        internal static string CommandsManager_MediaPreviousCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_MediaPreviousCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Simulates &apos;Volume Down&apos; key..
        /// </summary>
        internal static string CommandsManager_MediaVolumeDownCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_MediaVolumeDownCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Simulates &apos;Volume Up&apos; key..
        /// </summary>
        internal static string CommandsManager_MediaVolumeUpCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_MediaVolumeUpCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Puts all monitors in sleep (low power) mode..
        /// </summary>
        internal static string CommandsManager_MonitorSleepCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_MonitorSleepCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Tries to wake up all monitors by simulating a &apos;arrow up&apos; keypress..
        /// </summary>
        internal static string CommandsManager_MonitorWakeCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_MonitorWakeCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Simulates pressing mulitple keys.
        ///
        ///You need to put [ ] between every key, otherwise HASS.Agent can&apos;t tell them apart. So say you want to press X TAB Y SHIFT-Z, it&apos;d be [X] [{TAB}] [Y] [+Z].
        ///
        ///There are a few tricks you can use:
        ///
        ///- If you want a bracket pressed, escape it, so [ is [\[] and ] is [\]] 
        ///
        ///- Special keys go between { }, like {TAB} or {UP}
        ///
        ///- Put a + in front of a key to add SHIFT, ^ for CTRL and % for ALT. So, +C is SHIFT-C. Or, +(CD) is SHIFT-C and SHIFT-D, while +CD is SHIFT-C and D
        ///        /// [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string CommandsManager_MultipleKeysCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_MultipleKeysCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Execute a Powershell command or script.
        ///
        ///You can either provide the location of a script (*.ps1), or a single-line command.
        ///
        ///This will run without special elevation..
        /// </summary>
        internal static string CommandsManager_PowershellCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_PowershellCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Resets all sensor checks, forcing all sensors to process and send their value.
        ///
        ///Useful for example if you want to force HASS.Agent to update all your sensors after a HA reboot..
        /// </summary>
        internal static string CommandsManager_PublishAllSensorsCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_PublishAllSensorsCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Restarts the machine after one minute.
        ///
        ///Tip: Accidentally triggered? Run &apos;shutdown /a&apos; to abort shutdown..
        /// </summary>
        internal static string CommandsManager_RestartCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_RestartCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sets the volume of the current default audiodevice to the specified level..
        /// </summary>
        internal static string CommandsManager_SetVolumeCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_SetVolumeCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Shuts down the machine after one minute.
        ///
        ///Tip: Accidentally triggered? Run &apos;shutdown /a&apos; to abort shutdown..
        /// </summary>
        internal static string CommandsManager_ShutdownCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_ShutdownCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Puts the machine to sleep.
        ///
        ///Note: due to a limitation in Windows, this only works if hibernation is disabled, otherwise it will just hibernate.
        ///
        ///You can use something like NirCmd (http://www.nirsoft.net/utils/nircmd.html) to circumvent this..
        /// </summary>
        internal static string CommandsManager_SleepCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_SleepCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Shows a window with the provided URL.
        ///
        ///This differs from the &apos;LaunchUrl&apos; command in that it doesn&apos;t load a full-fledged browser, just the provided URL in its own window.
        ///
        ///You can use this to for instance quickly show Home Assistant&apos;s dashboard.
        ///
        ///By default, it stores cookies indefinitely so you only have to log in once..
        /// </summary>
        internal static string CommandsManager_WebViewCommandDescription {
            get {
                return ResourceManager.GetString("CommandsManager_WebViewCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Configure Command &amp;Parameters.
        /// </summary>
        internal static string CommandsMod_BtnConfigureCommand {
            get {
                return ResourceManager.GetString("CommandsMod_BtnConfigureCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Store Command.
        /// </summary>
        internal static string CommandsMod_BtnStore {
            get {
                return ResourceManager.GetString("CommandsMod_BtnStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please select a command type!.
        /// </summary>
        internal static string CommandsMod_BtnStore_MessageBox1 {
            get {
                return ResourceManager.GetString("CommandsMod_BtnStore_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please enter a value between 0-100 as the desired volume level!.
        /// </summary>
        internal static string CommandsMod_BtnStore_MessageBox10 {
            get {
                return ResourceManager.GetString("CommandsMod_BtnStore_MessageBox10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please select a valid command type!.
        /// </summary>
        internal static string CommandsMod_BtnStore_MessageBox2 {
            get {
                return ResourceManager.GetString("CommandsMod_BtnStore_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A command with that name already exists, are you sure you want to continue?.
        /// </summary>
        internal static string CommandsMod_BtnStore_MessageBox3 {
            get {
                return ResourceManager.GetString("CommandsMod_BtnStore_MessageBox3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à If a command is not provided, you may only use this entity with an &apos;action&apos; value via Home Assistant, running it as-is will have no action.
        ///
        ///Are you sure you want to proceed?.
        /// </summary>
        internal static string CommandsMod_BtnStore_MessageBox4 {
            get {
                return ResourceManager.GetString("CommandsMod_BtnStore_MessageBox4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please enter a key code!.
        /// </summary>
        internal static string CommandsMod_BtnStore_MessageBox5 {
            get {
                return ResourceManager.GetString("CommandsMod_BtnStore_MessageBox5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Checking keys failed: {0}.
        /// </summary>
        internal static string CommandsMod_BtnStore_MessageBox6 {
            get {
                return ResourceManager.GetString("CommandsMod_BtnStore_MessageBox6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à If a URL is not provided, you may only use this entity with an &apos;action&apos; value via Home Assistant, running it as-is will have no action.
        ///
        ///Are you sure you want to proceed?.
        /// </summary>
        internal static string CommandsMod_BtnStore_MessageBox7 {
            get {
                return ResourceManager.GetString("CommandsMod_BtnStore_MessageBox7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à If you do not configure the command, you may only use this entity with an &apos;action&apos; value via Home Assistant and it will appear using the default settings, running it as-is will have no action.
        ///
        ///Are you sure you want to do this?.
        /// </summary>
        internal static string CommandsMod_BtnStore_MessageBox8 {
            get {
                return ResourceManager.GetString("CommandsMod_BtnStore_MessageBox8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The keycode you have provided is not a valid number!
        ///
        ///Please ensure the keycode field is in focus and press the key you want simulated, the keycode should then be generated for you..
        /// </summary>
        internal static string CommandsMod_BtnStore_MessageBox9 {
            get {
                return ResourceManager.GetString("CommandsMod_BtnStore_MessageBox9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Launch in Incognito Mode.
        /// </summary>
        internal static string CommandsMod_CbCommandSpecific_Incognito {
            get {
                return ResourceManager.GetString("CommandsMod_CbCommandSpecific_Incognito", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Run as &apos;Low Integrity&apos;.
        /// </summary>
        internal static string CommandsMod_CbRunAsLowIntegrity {
            get {
                return ResourceManager.GetString("CommandsMod_CbRunAsLowIntegrity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à   Type.
        /// </summary>
        internal static string CommandsMod_ClmSensorName {
            get {
                return ResourceManager.GetString("CommandsMod_ClmSensorName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Command.
        /// </summary>
        internal static string CommandsMod_CommandsMod {
            get {
                return ResourceManager.GetString("CommandsMod_CommandsMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Action.
        /// </summary>
        internal static string CommandsMod_LblActionInfo {
            get {
                return ResourceManager.GetString("CommandsMod_LblActionInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à agent.
        /// </summary>
        internal static string CommandsMod_LblAgent {
            get {
                return ResourceManager.GetString("CommandsMod_LblAgent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Description.
        /// </summary>
        internal static string CommandsMod_LblDescription {
            get {
                return ResourceManager.GetString("CommandsMod_LblDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Entity Type.
        /// </summary>
        internal static string CommandsMod_LblEntityType {
            get {
                return ResourceManager.GetString("CommandsMod_LblEntityType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Browser: Default
        ///
        ///Please configure a custom browser to enable incognito mode..
        /// </summary>
        internal static string CommandsMod_LblInfo_Browser {
            get {
                return ResourceManager.GetString("CommandsMod_LblInfo_Browser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Browser: {0}.
        /// </summary>
        internal static string CommandsMod_LblInfo_BrowserSpecific {
            get {
                return ResourceManager.GetString("CommandsMod_LblInfo_BrowserSpecific", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Executor: None
        ///
        ///Please configure an executor or your command will not run..
        /// </summary>
        internal static string CommandsMod_LblInfo_Executor {
            get {
                return ResourceManager.GetString("CommandsMod_LblInfo_Executor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Executor: {0}.
        /// </summary>
        internal static string CommandsMod_LblInfo_ExecutorSpecific {
            get {
                return ResourceManager.GetString("CommandsMod_LblInfo_ExecutorSpecific", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à What&apos;s this?.
        /// </summary>
        internal static string CommandsMod_LblIntegrityInfo {
            get {
                return ResourceManager.GetString("CommandsMod_LblIntegrityInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Low integrity means your command will be executed with restricted privileges..
        /// </summary>
        internal static string CommandsMod_LblIntegrityInfo_InfoMsg1 {
            get {
                return ResourceManager.GetString("CommandsMod_LblIntegrityInfo_InfoMsg1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This means it will only be able to save and modify files in certain locations,.
        /// </summary>
        internal static string CommandsMod_LblIntegrityInfo_InfoMsg2 {
            get {
                return ResourceManager.GetString("CommandsMod_LblIntegrityInfo_InfoMsg2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à such as the &apos;%USERPROFILE%\AppData\LocalLow&apos; folder or.
        /// </summary>
        internal static string CommandsMod_LblIntegrityInfo_InfoMsg3 {
            get {
                return ResourceManager.GetString("CommandsMod_LblIntegrityInfo_InfoMsg3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the &apos;HKEY_CURRENT_USER\Software\AppDataLow&apos; registry key..
        /// </summary>
        internal static string CommandsMod_LblIntegrityInfo_InfoMsg4 {
            get {
                return ResourceManager.GetString("CommandsMod_LblIntegrityInfo_InfoMsg4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You should test your command to make sure it&apos;s not influenced by this!.
        /// </summary>
        internal static string CommandsMod_LblIntegrityInfo_InfoMsg5 {
            get {
                return ResourceManager.GetString("CommandsMod_LblIntegrityInfo_InfoMsg5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Show MQTT Action Topic.
        /// </summary>
        internal static string CommandsMod_LblMqttTopic {
            get {
                return ResourceManager.GetString("CommandsMod_LblMqttTopic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The MQTT manager hasn&apos;t been configured properly, or hasn&apos;t yet completed its startup..
        /// </summary>
        internal static string CommandsMod_LblMqttTopic_MessageBox1 {
            get {
                return ResourceManager.GetString("CommandsMod_LblMqttTopic_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Name.
        /// </summary>
        internal static string CommandsMod_LblName {
            get {
                return ResourceManager.GetString("CommandsMod_LblName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selected Type.
        /// </summary>
        internal static string CommandsMod_LblSelectedType {
            get {
                return ResourceManager.GetString("CommandsMod_LblSelectedType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Service.
        /// </summary>
        internal static string CommandsMod_LblService {
            get {
                return ResourceManager.GetString("CommandsMod_LblService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Configuration.
        /// </summary>
        internal static string CommandsMod_LblSetting {
            get {
                return ResourceManager.GetString("CommandsMod_LblSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Command.
        /// </summary>
        internal static string CommandsMod_LblSetting_Command {
            get {
                return ResourceManager.GetString("CommandsMod_LblSetting_Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Command or Script.
        /// </summary>
        internal static string CommandsMod_LblSetting_CommandScript {
            get {
                return ResourceManager.GetString("CommandsMod_LblSetting_CommandScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Keycode.
        /// </summary>
        internal static string CommandsMod_LblSetting_KeyCode {
            get {
                return ResourceManager.GetString("CommandsMod_LblSetting_KeyCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Keycodes.
        /// </summary>
        internal static string CommandsMod_LblSetting_KeyCodes {
            get {
                return ResourceManager.GetString("CommandsMod_LblSetting_KeyCodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à URL.
        /// </summary>
        internal static string CommandsMod_LblSetting_Url {
            get {
                return ResourceManager.GetString("CommandsMod_LblSetting_Url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent only!.
        /// </summary>
        internal static string CommandsMod_LblSpecificClient {
            get {
                return ResourceManager.GetString("CommandsMod_LblSpecificClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à If you don&apos;t enter a command or script, you can only use this entity with an &apos;action&apos; value through Home Assistant. Running it as-is won&apos;t do anything.
        ///
        ///Are you sure you want this?.
        /// </summary>
        internal static string CommandsMod_MessageBox_Action {
            get {
                return ResourceManager.GetString("CommandsMod_MessageBox_Action", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à If you don&apos;t enter a volume value, you can only use this entity with an &apos;action&apos; value through Home Assistant. Running it as-is won&apos;t do anything.
        ///
        ///Are you sure you want this?.
        /// </summary>
        internal static string CommandsMod_MessageBox_Action2 {
            get {
                return ResourceManager.GetString("CommandsMod_MessageBox_Action2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select a valid entity type first..
        /// </summary>
        internal static string CommandsMod_MessageBox_EntityType {
            get {
                return ResourceManager.GetString("CommandsMod_MessageBox_EntityType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please provide a name!.
        /// </summary>
        internal static string CommandsMod_MessageBox_Name {
            get {
                return ResourceManager.GetString("CommandsMod_MessageBox_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The name you provided contains unsupported characters and won&apos;t work. The suggested version is:
        ///
        ///{0}
        ///
        ///Do you want to use this version?.
        /// </summary>
        internal static string CommandsMod_MessageBox_Sanitize {
            get {
                return ResourceManager.GetString("CommandsMod_MessageBox_Sanitize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {0} only!.
        /// </summary>
        internal static string CommandsMod_SpecificClient {
            get {
                return ResourceManager.GetString("CommandsMod_SpecificClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Command.
        /// </summary>
        internal static string CommandsMod_Title {
            get {
                return ResourceManager.GetString("CommandsMod_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mod Command.
        /// </summary>
        internal static string CommandsMod_Title_ModCommand {
            get {
                return ResourceManager.GetString("CommandsMod_Title_ModCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à New Command.
        /// </summary>
        internal static string CommandsMod_Title_NewCommand {
            get {
                return ResourceManager.GetString("CommandsMod_Title_NewCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Custom.
        /// </summary>
        internal static string CommandType_CustomCommand {
            get {
                return ResourceManager.GetString("CommandType_CustomCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à CustomExecutor.
        /// </summary>
        internal static string CommandType_CustomExecutorCommand {
            get {
                return ResourceManager.GetString("CommandType_CustomExecutorCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Hibernate.
        /// </summary>
        internal static string CommandType_HibernateCommand {
            get {
                return ResourceManager.GetString("CommandType_HibernateCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Key.
        /// </summary>
        internal static string CommandType_KeyCommand {
            get {
                return ResourceManager.GetString("CommandType_KeyCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à LaunchUrl.
        /// </summary>
        internal static string CommandType_LaunchUrlCommand {
            get {
                return ResourceManager.GetString("CommandType_LaunchUrlCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Lock.
        /// </summary>
        internal static string CommandType_LockCommand {
            get {
                return ResourceManager.GetString("CommandType_LockCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à LogOff.
        /// </summary>
        internal static string CommandType_LogOffCommand {
            get {
                return ResourceManager.GetString("CommandType_LogOffCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MediaMute.
        /// </summary>
        internal static string CommandType_MediaMuteCommand {
            get {
                return ResourceManager.GetString("CommandType_MediaMuteCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MediaNext.
        /// </summary>
        internal static string CommandType_MediaNextCommand {
            get {
                return ResourceManager.GetString("CommandType_MediaNextCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MediaPlayPause.
        /// </summary>
        internal static string CommandType_MediaPlayPauseCommand {
            get {
                return ResourceManager.GetString("CommandType_MediaPlayPauseCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MediaPrevious.
        /// </summary>
        internal static string CommandType_MediaPreviousCommand {
            get {
                return ResourceManager.GetString("CommandType_MediaPreviousCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MediaVolumeDown.
        /// </summary>
        internal static string CommandType_MediaVolumeDownCommand {
            get {
                return ResourceManager.GetString("CommandType_MediaVolumeDownCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MediaVolumeUp.
        /// </summary>
        internal static string CommandType_MediaVolumeUpCommand {
            get {
                return ResourceManager.GetString("CommandType_MediaVolumeUpCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MonitorSleep.
        /// </summary>
        internal static string CommandType_MonitorSleepCommand {
            get {
                return ResourceManager.GetString("CommandType_MonitorSleepCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MonitorWake.
        /// </summary>
        internal static string CommandType_MonitorWakeCommand {
            get {
                return ResourceManager.GetString("CommandType_MonitorWakeCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MultipleKeys.
        /// </summary>
        internal static string CommandType_MultipleKeysCommand {
            get {
                return ResourceManager.GetString("CommandType_MultipleKeysCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Powershell.
        /// </summary>
        internal static string CommandType_PowershellCommand {
            get {
                return ResourceManager.GetString("CommandType_PowershellCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à PublishAllSensors.
        /// </summary>
        internal static string CommandType_PublishAllSensorsCommand {
            get {
                return ResourceManager.GetString("CommandType_PublishAllSensorsCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Restart.
        /// </summary>
        internal static string CommandType_RestartCommand {
            get {
                return ResourceManager.GetString("CommandType_RestartCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SendWindowToFront.
        /// </summary>
        internal static string CommandType_SendWindowToFrontCommand {
            get {
                return ResourceManager.GetString("CommandType_SendWindowToFrontCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SetVolume.
        /// </summary>
        internal static string CommandType_SetVolumeCommand {
            get {
                return ResourceManager.GetString("CommandType_SetVolumeCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Shutdown.
        /// </summary>
        internal static string CommandType_ShutdownCommand {
            get {
                return ResourceManager.GetString("CommandType_ShutdownCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sleep.
        /// </summary>
        internal static string CommandType_SleepCommand {
            get {
                return ResourceManager.GetString("CommandType_SleepCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à WebView.
        /// </summary>
        internal static string CommandType_WebViewCommand {
            get {
                return ResourceManager.GetString("CommandType_WebViewCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Connecting...
        /// </summary>
        internal static string ComponentStatus_Connecting {
            get {
                return ResourceManager.GetString("ComponentStatus_Connecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disabled.
        /// </summary>
        internal static string ComponentStatus_Disabled {
            get {
                return ResourceManager.GetString("ComponentStatus_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Failed.
        /// </summary>
        internal static string ComponentStatus_Failed {
            get {
                return ResourceManager.GetString("ComponentStatus_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Loading...
        /// </summary>
        internal static string ComponentStatus_Loading {
            get {
                return ResourceManager.GetString("ComponentStatus_Loading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Running.
        /// </summary>
        internal static string ComponentStatus_Ok {
            get {
                return ResourceManager.GetString("ComponentStatus_Ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Stopped.
        /// </summary>
        internal static string ComponentStatus_Stopped {
            get {
                return ResourceManager.GetString("ComponentStatus_Stopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Test.
        /// </summary>
        internal static string ConfigExternalTools_BtnExternalBrowserIncognitoTest {
            get {
                return ResourceManager.GetString("ConfigExternalTools_BtnExternalBrowserIncognitoTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please enter the location of your browser&apos;s binary! (.exe file).
        /// </summary>
        internal static string ConfigExternalTools_BtnExternalBrowserIncognitoTest_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigExternalTools_BtnExternalBrowserIncognitoTest_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No incognito arguments were provided so the browser will likely launch normally.
        ///
        ///Do you want to continue?.
        /// </summary>
        internal static string ConfigExternalTools_BtnExternalBrowserIncognitoTest_MessageBox3 {
            get {
                return ResourceManager.GetString("ConfigExternalTools_BtnExternalBrowserIncognitoTest_MessageBox3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Something went wrong while launching your browser in incognito mode!
        ///
        ///Please check the logs for more information..
        /// </summary>
        internal static string ConfigExternalTools_BtnExternalBrowserIncognitoTest_MessageBox4 {
            get {
                return ResourceManager.GetString("ConfigExternalTools_BtnExternalBrowserIncognitoTest_MessageBox4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The browser binary provided could not be found, please ensure the path is correct and try again..
        /// </summary>
        internal static string ConfigExternalTools_ConfigExternalTools_BtnExternalBrowserIncognitoTest_MessageBox2 {
            get {
                return ResourceManager.GetString("ConfigExternalTools_ConfigExternalTools_BtnExternalBrowserIncognitoTest_MessageBo" +
                        "x2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Browser Binary.
        /// </summary>
        internal static string ConfigExternalTools_LblBrowserBinary {
            get {
                return ResourceManager.GetString("ConfigExternalTools_LblBrowserBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Browser Name.
        /// </summary>
        internal static string ConfigExternalTools_LblBrowserName {
            get {
                return ResourceManager.GetString("ConfigExternalTools_LblBrowserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Custom Executor Binary.
        /// </summary>
        internal static string ConfigExternalTools_LblCustomExecutorBinary {
            get {
                return ResourceManager.GetString("ConfigExternalTools_LblCustomExecutorBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Custom Executor Name.
        /// </summary>
        internal static string ConfigExternalTools_LblCustomExecutorName {
            get {
                return ResourceManager.GetString("ConfigExternalTools_LblCustomExecutorName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This page allows you to configure bindings with external tools..
        /// </summary>
        internal static string ConfigExternalTools_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigExternalTools_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à By default HASS.Agent will launch URLs using your default browser. You can also configure
        ///a specific browser to be used instead along with launch arguments to run in private mode..
        /// </summary>
        internal static string ConfigExternalTools_LblInfo2 {
            get {
                return ResourceManager.GetString("ConfigExternalTools_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You can configure the HASS.Agent to use a specific interpreter such as Perl or Python.
        ///Use the &apos;custom executor&apos; command to launch this executor..
        /// </summary>
        internal static string ConfigExternalTools_LblInfo3 {
            get {
                return ResourceManager.GetString("ConfigExternalTools_LblInfo3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Additional Launch Arguments.
        /// </summary>
        internal static string ConfigExternalTools_LblLaunchIncogArg {
            get {
                return ResourceManager.GetString("ConfigExternalTools_LblLaunchIncogArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Tip: Double-click to Browse.
        /// </summary>
        internal static string ConfigExternalTools_LblTip1 {
            get {
                return ResourceManager.GetString("ConfigExternalTools_LblTip1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable Device Name &amp;Sanitation.
        /// </summary>
        internal static string ConfigGeneral_CbEnableDeviceNameSanitation {
            get {
                return ResourceManager.GetString("ConfigGeneral_CbEnableDeviceNameSanitation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable State Notifications.
        /// </summary>
        internal static string ConfigGeneral_CbEnableStateNotifications {
            get {
                return ResourceManager.GetString("ConfigGeneral_CbEnableStateNotifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Device &amp;Name.
        /// </summary>
        internal static string ConfigGeneral_LblDeviceName {
            get {
                return ResourceManager.GetString("ConfigGeneral_LblDeviceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disconnected Grace &amp;Period.
        /// </summary>
        internal static string ConfigGeneral_LblDisconGracePeriod {
            get {
                return ResourceManager.GetString("ConfigGeneral_LblDisconGracePeriod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Seconds.
        /// </summary>
        internal static string ConfigGeneral_LblDisconGraceSeconds {
            get {
                return ResourceManager.GetString("ConfigGeneral_LblDisconGraceSeconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This page contains general configuration settings, for more settings you can browse the tabs on the left..
        /// </summary>
        internal static string ConfigGeneral_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigGeneral_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The device name is used to identify your machine on Home Assistant.
        ///It is also used as a prefix for your command/sensor names (this can be changed per entity)..
        /// </summary>
        internal static string ConfigGeneral_LblInfo2 {
            get {
                return ResourceManager.GetString("ConfigGeneral_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à IMPORTANT: if you change this value, HASS.Agent will unpublish all your sensors, commands and force a restart of itself so they can be republished under the new device name.
        ///Your automations and scripts will keep working..
        /// </summary>
        internal static string ConfigGeneral_LblInfo3 {
            get {
                return ResourceManager.GetString("ConfigGeneral_LblInfo3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent will wait a grace period before notifying you of disconnects from MQTT or HA&apos;s API.
        ///You can set the amount of seconds to wait in this grace period below..
        /// </summary>
        internal static string ConfigGeneral_LblInfo4 {
            get {
                return ResourceManager.GetString("ConfigGeneral_LblInfo4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent will sanitize your device name to make sure HA will accept it, you can overrule this rule below if you&apos;re sure that your name will be accepted as-is..
        /// </summary>
        internal static string ConfigGeneral_LblInfo5 {
            get {
                return ResourceManager.GetString("ConfigGeneral_LblInfo5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent sends notifications when the state of a module changes, you can adjust whether or not you want to receive these notifications below..
        /// </summary>
        internal static string ConfigGeneral_LblInfo6 {
            get {
                return ResourceManager.GetString("ConfigGeneral_LblInfo6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Interface &amp;Language.
        /// </summary>
        internal static string ConfigGeneral_LblInterfaceLangauge {
            get {
                return ResourceManager.GetString("ConfigGeneral_LblInterfaceLangauge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Test Connection.
        /// </summary>
        internal static string ConfigHomeAssistantApi_BtnTestApi {
            get {
                return ResourceManager.GetString("ConfigHomeAssistantApi_BtnTestApi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please enter a valid API key!.
        /// </summary>
        internal static string ConfigHomeAssistantApi_BtnTestApi_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigHomeAssistantApi_BtnTestApi_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please enter a value for your Home Assistant&apos;s URI..
        /// </summary>
        internal static string ConfigHomeAssistantApi_BtnTestApi_MessageBox2 {
            get {
                return ResourceManager.GetString("ConfigHomeAssistantApi_BtnTestApi_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unable to connect, the following error was returned:
        ///
        ///{0}.
        /// </summary>
        internal static string ConfigHomeAssistantApi_BtnTestApi_MessageBox3 {
            get {
                return ResourceManager.GetString("ConfigHomeAssistantApi_BtnTestApi_MessageBox3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Connection OK!
        ///
        ///Home Assistant version: {0}.
        /// </summary>
        internal static string ConfigHomeAssistantApi_BtnTestApi_MessageBox4 {
            get {
                return ResourceManager.GetString("ConfigHomeAssistantApi_BtnTestApi_MessageBox4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The API token you have provided doesn&apos;t appear to be valid, please ensure you selected the entire token (Don&apos;t use CTRL + A or double-click). A valid API key contains three sections, separated by two dots.
        ///
        ///Are you sure you want to use this key anyway?.
        /// </summary>
        internal static string ConfigHomeAssistantApi_BtnTestApi_MessageBox5 {
            get {
                return ResourceManager.GetString("ConfigHomeAssistantApi_BtnTestApi_MessageBox5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The URI you have provided does not appear to be valid, a valid URI may look like either of the following:
        ///- http://homeassistant.local:8123
        ///- http://192.168.0.1:8123
        ///
        ///Are you sure you want to use this URI anyway?.
        /// </summary>
        internal static string ConfigHomeAssistantApi_BtnTestApi_MessageBox6 {
            get {
                return ResourceManager.GetString("ConfigHomeAssistantApi_BtnTestApi_MessageBox6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Testing...
        /// </summary>
        internal static string ConfigHomeAssistantApi_BtnTestApi_Testing {
            get {
                return ResourceManager.GetString("ConfigHomeAssistantApi_BtnTestApi_Testing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Use &amp;automatic client certificate selection.
        /// </summary>
        internal static string ConfigHomeAssistantApi_CbHassAutoClientCertificate {
            get {
                return ResourceManager.GetString("ConfigHomeAssistantApi_CbHassAutoClientCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;API Token.
        /// </summary>
        internal static string ConfigHomeAssistantApi_LblApiToken {
            get {
                return ResourceManager.GetString("ConfigHomeAssistantApi_LblApiToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client &amp;Certificate.
        /// </summary>
        internal static string ConfigHomeAssistantApi_LblClientCertificate {
            get {
                return ResourceManager.GetString("ConfigHomeAssistantApi_LblClientCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à To learn which entities you have configured and to send quick actions, HASS.Agent uses
        ///Home Assistant&apos;s API.
        ///
        ///Please provide a long-lived access token and the address of your Home Assistant instance.
        ///You can get a token in Home Assistant by clicking your profile picture at the bottom-left
        ///and navigating to the bottom of the page until you see the &apos;CREATE TOKEN&apos; button..
        /// </summary>
        internal static string ConfigHomeAssistantApi_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigHomeAssistantApi_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Server &amp;URI.
        /// </summary>
        internal static string ConfigHomeAssistantApi_LblServerUri {
            get {
                return ResourceManager.GetString("ConfigHomeAssistantApi_LblServerUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Tip: Double-click this field to browse.
        /// </summary>
        internal static string ConfigHomeAssistantApi_LblTip1 {
            get {
                return ResourceManager.GetString("ConfigHomeAssistantApi_LblTip1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Clear.
        /// </summary>
        internal static string ConfigHotKey_BtnClearHotKey {
            get {
                return ResourceManager.GetString("ConfigHotKey_BtnClearHotKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Enable Quick Actions Hotkey.
        /// </summary>
        internal static string ConfigHotKey_CbEnableQuickActionsHotkey {
            get {
                return ResourceManager.GetString("ConfigHotKey_CbEnableQuickActionsHotkey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Hotkey Combination.
        /// </summary>
        internal static string ConfigHotKey_LblHotkeyCombo {
            get {
                return ResourceManager.GetString("ConfigHotKey_LblHotkeyCombo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An easy way to pull up your quick actions is to use a global hotkey.
        ///
        ///This way, whatever you&apos;re doing on your machine, you can always interact with Home Assistant..
        /// </summary>
        internal static string ConfigHotKey_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigHotKey_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Execute Port &amp;Reservation.
        /// </summary>
        internal static string ConfigLocalApi_BtnExecutePortReservation {
            get {
                return ResourceManager.GetString("ConfigLocalApi_BtnExecutePortReservation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Enable Local API.
        /// </summary>
        internal static string ConfigLocalApi_CbLocalApiActive {
            get {
                return ResourceManager.GetString("ConfigLocalApi_CbLocalApiActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent has its own local API, so Home Assistant can send requests (for instance to send a notification). You can configure it globally here, and afterwards you can configure the dependent sections (currently notifications and mediaplayer).
        ///
        ///Note: this is not required for the new integration to function. Only enable and use it if you don&apos;t use MQTT..
        /// </summary>
        internal static string ConfigLocalApi_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigLocalApi_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à To be able to listen to the requests, HASS.Agent needs to have its port reserved and opened in your firewall. You can use this button to have it done for you..
        /// </summary>
        internal static string ConfigLocalApi_LblInfo2 {
            get {
                return ResourceManager.GetString("ConfigLocalApi_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Port.
        /// </summary>
        internal static string ConfigLocalApi_LblPort {
            get {
                return ResourceManager.GetString("ConfigLocalApi_LblPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Clear Audio Cache.
        /// </summary>
        internal static string ConfigLocalStorage_BtnClearAudioCache {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_BtnClearAudioCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cleaning...
        /// </summary>
        internal static string ConfigLocalStorage_BtnClearAudioCache_InfoText1 {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_BtnClearAudioCache_InfoText1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The audio cache has been cleared!.
        /// </summary>
        internal static string ConfigLocalStorage_BtnClearAudioCache_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_BtnClearAudioCache_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Clear Image Cache.
        /// </summary>
        internal static string ConfigLocalStorage_BtnClearImageCache {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_BtnClearImageCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cleaning...
        /// </summary>
        internal static string ConfigLocalStorage_BtnClearImageCache_InfoText1 {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_BtnClearImageCache_InfoText1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Image cache has been cleared!.
        /// </summary>
        internal static string ConfigLocalStorage_BtnClearImageCache_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_BtnClearImageCache_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Clear WebView Cache.
        /// </summary>
        internal static string ConfigLocalStorage_BtnClearWebViewCache {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_BtnClearWebViewCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cleaning...
        /// </summary>
        internal static string ConfigLocalStorage_BtnClearWebViewCache_InfoText1 {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_BtnClearWebViewCache_InfoText1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The WebView cache has been cleared!.
        /// </summary>
        internal static string ConfigLocalStorage_BtnClearWebViewCache_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_BtnClearWebViewCache_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Open Folder.
        /// </summary>
        internal static string ConfigLocalStorage_BtnOpenImageCache {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_BtnOpenImageCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Audio Cache Location.
        /// </summary>
        internal static string ConfigLocalStorage_LblAudioCacheLocation {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_LblAudioCacheLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à days.
        /// </summary>
        internal static string ConfigLocalStorage_LblCacheDays {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_LblCacheDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Image Cache Location.
        /// </summary>
        internal static string ConfigLocalStorage_LblCacheLocations {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_LblCacheLocations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à days.
        /// </summary>
        internal static string ConfigLocalStorage_LblImageCacheDays {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_LblImageCacheDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Image Cache Location.
        /// </summary>
        internal static string ConfigLocalStorage_LblImageCacheLocation {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_LblImageCacheLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Some items like images shown in notifications have to be temporarily stored locally. You can
        ///configure the amount of days they should be kept before HASS.Agent deletes them.
        ///
        ///Enter &apos;0&apos; to keep them permanently..
        /// </summary>
        internal static string ConfigLocalStorage_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Keep audio for.
        /// </summary>
        internal static string ConfigLocalStorage_LblKeepAudio {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_LblKeepAudio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Keep images for.
        /// </summary>
        internal static string ConfigLocalStorage_LblKeepImages {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_LblKeepImages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Clear cache every.
        /// </summary>
        internal static string ConfigLocalStorage_LblKeepWebView {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_LblKeepWebView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à WebView Cache Location.
        /// </summary>
        internal static string ConfigLocalStorage_LblWebViewCacheLocation {
            get {
                return ResourceManager.GetString("ConfigLocalStorage_LblWebViewCacheLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Open Logs Folder.
        /// </summary>
        internal static string ConfigLogging_BtnShowLogs {
            get {
                return ResourceManager.GetString("ConfigLogging_BtnShowLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Enable Extended Logging.
        /// </summary>
        internal static string ConfigLogging_CbExtendedLogging {
            get {
                return ResourceManager.GetString("ConfigLogging_CbExtendedLogging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Extended logging provides more verbose and in-depth logging, in case the default logging isn&apos;t
        ///sufficient. Please note that enabling this can cause the logfiles to grow large, and should only be
        ///used when you suspect something&apos;s wrong with HASS.Agent itself or when asked by the
        ///developers..
        /// </summary>
        internal static string ConfigLogging_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigLogging_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Media Player &amp;Documentation.
        /// </summary>
        internal static string ConfigMediaPlayer_BtnMediaPlayerReadme {
            get {
                return ResourceManager.GetString("ConfigMediaPlayer_BtnMediaPlayerReadme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Enable Media Player Functionality.
        /// </summary>
        internal static string ConfigMediaPlayer_CbEnableMediaPlayer {
            get {
                return ResourceManager.GetString("ConfigMediaPlayer_CbEnableMediaPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à both the local API and MQTT are disabled, but the integration needs at least one for it to work.
        /// </summary>
        internal static string ConfigMediaPlayer_LblConnectivityDisabled {
            get {
                return ResourceManager.GetString("ConfigMediaPlayer_LblConnectivityDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent can act as a media player for Home Assistant, so you&apos;ll be able to see and control any media that&apos;s playing, and send text-to-speech. If you have MQTT enabled, your device will automatically get added. Otherwise, manually configure the integration to use the local API..
        /// </summary>
        internal static string ConfigMediaPlayer_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigMediaPlayer_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à If something is not working, make sure you try the following steps:
        ///
        ///- Install the HASS.Agent integration
        ///- Restart Home Assistant
        ///- Make sure HASS.Agent is active with MQTT enabled!
        ///- Your device should get detected and added as an entity automatically
        ///- Optionally: manually add it using the local API.
        /// </summary>
        internal static string ConfigMediaPlayer_LblInfo2 {
            get {
                return ResourceManager.GetString("ConfigMediaPlayer_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The local API is disabled however the media player requires it in order to function..
        /// </summary>
        internal static string ConfigMediaPlayer_LblLocalApiDisabled {
            get {
                return ResourceManager.GetString("ConfigMediaPlayer_LblLocalApiDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Clear Configuration.
        /// </summary>
        internal static string ConfigMqtt_BtnMqttClearConfig {
            get {
                return ResourceManager.GetString("ConfigMqtt_BtnMqttClearConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Allow Untrusted Certificates.
        /// </summary>
        internal static string ConfigMqtt_CbAllowUntrustedCertificates {
            get {
                return ResourceManager.GetString("ConfigMqtt_CbAllowUntrustedCertificates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable MQTT.
        /// </summary>
        internal static string ConfigMqtt_CbEnableMqtt {
            get {
                return ResourceManager.GetString("ConfigMqtt_CbEnableMqtt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;TLS.
        /// </summary>
        internal static string ConfigMqtt_CbMqttTls {
            get {
                return ResourceManager.GetString("ConfigMqtt_CbMqttTls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Use &amp;Retain Flag.
        /// </summary>
        internal static string ConfigMqtt_CbUseRetainFlag {
            get {
                return ResourceManager.GetString("ConfigMqtt_CbUseRetainFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Broker IP Address or Hostname.
        /// </summary>
        internal static string ConfigMqtt_LblBrokerIp {
            get {
                return ResourceManager.GetString("ConfigMqtt_LblBrokerIp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Password.
        /// </summary>
        internal static string ConfigMqtt_LblBrokerPassword {
            get {
                return ResourceManager.GetString("ConfigMqtt_LblBrokerPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Port.
        /// </summary>
        internal static string ConfigMqtt_LblBrokerPort {
            get {
                return ResourceManager.GetString("ConfigMqtt_LblBrokerPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Username.
        /// </summary>
        internal static string ConfigMqtt_LblBrokerUsername {
            get {
                return ResourceManager.GetString("ConfigMqtt_LblBrokerUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client Certificate.
        /// </summary>
        internal static string ConfigMqtt_LblClientCert {
            get {
                return ResourceManager.GetString("ConfigMqtt_LblClientCert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client ID.
        /// </summary>
        internal static string ConfigMqtt_LblClientId {
            get {
                return ResourceManager.GetString("ConfigMqtt_LblClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Discovery Prefix.
        /// </summary>
        internal static string ConfigMqtt_LblDiscoPrefix {
            get {
                return ResourceManager.GetString("ConfigMqtt_LblDiscoPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Commands and sensors use MQTT, as well as notifications and media player functions when using the new integration. 
        ///
        ///Please provide credentials for your broker, if you&apos;re using the HA Mosquitto addon, you can probably use the preset address.
        ///
        ///Note: these settings (excluding the Client ID) will also be applied to the satellite service..
        /// </summary>
        internal static string ConfigMqtt_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigMqtt_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à If MQTT is not enabled, commands and sensors will not work!.
        /// </summary>
        internal static string ConfigMqtt_LblMqttDisabledWarning {
            get {
                return ResourceManager.GetString("ConfigMqtt_LblMqttDisabledWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Root Certificate.
        /// </summary>
        internal static string ConfigMqtt_LblRootCert {
            get {
                return ResourceManager.GetString("ConfigMqtt_LblRootCert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à (leave default if unsure).
        /// </summary>
        internal static string ConfigMqtt_LblTip1 {
            get {
                return ResourceManager.GetString("ConfigMqtt_LblTip1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à (leave empty to auto generate).
        /// </summary>
        internal static string ConfigMqtt_LblTip2 {
            get {
                return ResourceManager.GetString("ConfigMqtt_LblTip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Tip: Double-click these fields to browse.
        /// </summary>
        internal static string ConfigMqtt_LblTip3 {
            get {
                return ResourceManager.GetString("ConfigMqtt_LblTip3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Execute Port Reservation.
        /// </summary>
        internal static string ConfigNotifications_BtnExecutePortReservation {
            get {
                return ResourceManager.GetString("ConfigNotifications_BtnExecutePortReservation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Executing, please wait...
        /// </summary>
        internal static string ConfigNotifications_BtnExecutePortReservation_Busy {
            get {
                return ResourceManager.GetString("ConfigNotifications_BtnExecutePortReservation_Busy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Something went wrong whilst reserving the port!
        ///
        ///Manual execution is required and a command has been copied to your clipboard, please open an elevated terminal and paste the command.
        ///
        ///Additionally, remember to change your Firewall Rules port!.
        /// </summary>
        internal static string ConfigNotifications_BtnExecutePortReservation_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigNotifications_BtnExecutePortReservation_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Notifications &amp;Documentation.
        /// </summary>
        internal static string ConfigNotifications_BtnNotificationsReadme {
            get {
                return ResourceManager.GetString("ConfigNotifications_BtnNotificationsReadme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Show Test Notification.
        /// </summary>
        internal static string ConfigNotifications_BtnSendTestNotification {
            get {
                return ResourceManager.GetString("ConfigNotifications_BtnSendTestNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Notifications are currently disabled, please enable them and restart the HASS.Agent, then try again..
        /// </summary>
        internal static string ConfigNotifications_BtnSendTestNotification_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigNotifications_BtnSendTestNotification_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The test notification should have appeared, if you did not receive it please check the logs or consult the documentation for troubleshooting tips.
        ///
        ///Note: This only tests locally whether notifications can be shown!.
        /// </summary>
        internal static string ConfigNotifications_BtnSendTestNotification_MessageBox2 {
            get {
                return ResourceManager.GetString("ConfigNotifications_BtnSendTestNotification_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Accept Notifications.
        /// </summary>
        internal static string ConfigNotifications_CbAcceptNotifications {
            get {
                return ResourceManager.GetString("ConfigNotifications_CbAcceptNotifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Ignore certificate errors for images.
        /// </summary>
        internal static string ConfigNotifications_CbNotificationsIgnoreImageCertErrors {
            get {
                return ResourceManager.GetString("ConfigNotifications_CbNotificationsIgnoreImageCertErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à both the local API and MQTT are disabled, but the integration needs at least one for it to work.
        /// </summary>
        internal static string ConfigNotifications_LblConnectivityDisabled {
            get {
                return ResourceManager.GetString("ConfigNotifications_LblConnectivityDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent can receive notifications from Home Assistant, using text, images and actions. If you have MQTT enabled, your device will automatically get added. Otherwise, manually configure the integration to use the local API..
        /// </summary>
        internal static string ConfigNotifications_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigNotifications_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à If something is not working, make sure you try the following steps:
        ///
        ///- Install the HASS.Agent integration
        ///- Restart Home Assistant
        ///- Make sure HASS.Agent is active with MQTT enabled!
        ///- Your device should get detected and added as an entity automatically
        ///- Optionally: manually add it using the local API.
        /// </summary>
        internal static string ConfigNotifications_LblInfo2 {
            get {
                return ResourceManager.GetString("ConfigNotifications_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The local API is disabled however the media player requires it in order to function..
        /// </summary>
        internal static string ConfigNotifications_LblLocalApiDisabled {
            get {
                return ResourceManager.GetString("ConfigNotifications_LblLocalApiDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Port.
        /// </summary>
        internal static string ConfigNotifications_LblPort {
            get {
                return ResourceManager.GetString("ConfigNotifications_LblPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This is a test notification!.
        /// </summary>
        internal static string ConfigNotifications_TestNotification {
            get {
                return ResourceManager.GetString("ConfigNotifications_TestNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Disable Service.
        /// </summary>
        internal static string ConfigService_BtnDisableService {
            get {
                return ResourceManager.GetString("ConfigService_BtnDisableService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Something went wrong whilst disabling the service, did you allow the UAC prompt?
        ///
        ///Check the HASS.Agent (not the service) logs for more information..
        /// </summary>
        internal static string ConfigService_BtnDisableService_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigService_BtnDisableService_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Enable Service.
        /// </summary>
        internal static string ConfigService_BtnEnableService {
            get {
                return ResourceManager.GetString("ConfigService_BtnEnableService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Something went wrong whilst enabling the service, did you allow the UAC prompt?
        ///
        ///Check the HASS.Agent (not the service) logs for more information..
        /// </summary>
        internal static string ConfigService_BtnEnableService_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigService_BtnEnableService_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Manage Service.
        /// </summary>
        internal static string ConfigService_BtnManageService {
            get {
                return ResourceManager.GetString("ConfigService_BtnManageService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The service is currently stopped and cannot be configured.
        ///
        ///Please start the service first in order to configure it..
        /// </summary>
        internal static string ConfigService_BtnManageService_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigService_BtnManageService_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Reinstall Service.
        /// </summary>
        internal static string ConfigService_BtnReinstallService {
            get {
                return ResourceManager.GetString("ConfigService_BtnReinstallService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Open Service &amp;Logs Folder.
        /// </summary>
        internal static string ConfigService_BtnShowLogs {
            get {
                return ResourceManager.GetString("ConfigService_BtnShowLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Something went wrong whilst reinstalling the service, did you allow the UAC prompt?
        ///
        ///Check the HASS.Agent (not the service) logs for more information..
        /// </summary>
        internal static string ConfigService_BtnShowLogs_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigService_BtnShowLogs_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à S&amp;tart Service.
        /// </summary>
        internal static string ConfigService_BtnStartService {
            get {
                return ResourceManager.GetString("ConfigService_BtnStartService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The service is set to &apos;disabled&apos;, so it cannot be started.
        ///
        ///Please enable the service first and try again..
        /// </summary>
        internal static string ConfigService_BtnStartService_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigService_BtnStartService_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Something went wrong whilst starting the service, did you allow the UAC prompt?
        ///
        ///Check the HASS.Agent (not the service) logs for more information..
        /// </summary>
        internal static string ConfigService_BtnStartService_MessageBox2 {
            get {
                return ResourceManager.GetString("ConfigService_BtnStartService_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Stop Service.
        /// </summary>
        internal static string ConfigService_BtnStopService {
            get {
                return ResourceManager.GetString("ConfigService_BtnStopService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Something went wrong whilst stopping the service, did you allow the UAC prompt?
        ///
        ///Check the HASS.Agent (not the service) logs for more information..
        /// </summary>
        internal static string ConfigService_BtnStopService_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigService_BtnStopService_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disabled.
        /// </summary>
        internal static string ConfigService_Disabled {
            get {
                return ResourceManager.GetString("ConfigService_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Failed.
        /// </summary>
        internal static string ConfigService_Failed {
            get {
                return ResourceManager.GetString("ConfigService_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The satellite service allows you to run sensors and commands even when no user&apos;s logged in. 
        ///Use the &apos;satellite service&apos; button on the main window to manage it..
        /// </summary>
        internal static string ConfigService_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigService_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à If you do not configure the service, it won&apos;t do anything. However, you can still decide to disable it as well.
        ///The installer will leave the disabled service alone(if you remove the service, the installer will reinstall it)..
        /// </summary>
        internal static string ConfigService_LblInfo2 {
            get {
                return ResourceManager.GetString("ConfigService_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You can try reinstalling the service if it&apos;s not working correctly.
        ///Your configuration and entities won&apos;t be removed..
        /// </summary>
        internal static string ConfigService_LblInfo3 {
            get {
                return ResourceManager.GetString("ConfigService_LblInfo3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à If the service still fails after reinstalling, please open a ticket and send the content of the latest log..
        /// </summary>
        internal static string ConfigService_LblInfo4 {
            get {
                return ResourceManager.GetString("ConfigService_LblInfo4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à If you want to manage the service (add commands and sensor, change settings) you can do so here, or by using the &apos;satellite service&apos; button on the main window..
        /// </summary>
        internal static string ConfigService_LblInfo5 {
            get {
                return ResourceManager.GetString("ConfigService_LblInfo5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Service Status:.
        /// </summary>
        internal static string ConfigService_LblServiceStatusInfo {
            get {
                return ResourceManager.GetString("ConfigService_LblServiceStatusInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Not Installed.
        /// </summary>
        internal static string ConfigService_NotInstalled {
            get {
                return ResourceManager.GetString("ConfigService_NotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Running.
        /// </summary>
        internal static string ConfigService_Running {
            get {
                return ResourceManager.GetString("ConfigService_Running", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Stopped.
        /// </summary>
        internal static string ConfigService_Stopped {
            get {
                return ResourceManager.GetString("ConfigService_Stopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Enable Start-on-Login.
        /// </summary>
        internal static string ConfigStartup_BtnSetStartOnLogin {
            get {
                return ResourceManager.GetString("ConfigStartup_BtnSetStartOnLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Something went wrong whilst disabling Start-on-Login, please check the logs for more information..
        /// </summary>
        internal static string ConfigStartup_BtnSetStartOnLogin_MessageBox1 {
            get {
                return ResourceManager.GetString("ConfigStartup_BtnSetStartOnLogin_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Something went wrong whilst disabling Start-on-Login, please check the logs for more information..
        /// </summary>
        internal static string ConfigStartup_BtnSetStartOnLogin_MessageBox2 {
            get {
                return ResourceManager.GetString("ConfigStartup_BtnSetStartOnLogin_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disable Start-on-Login.
        /// </summary>
        internal static string ConfigStartup_Disable {
            get {
                return ResourceManager.GetString("ConfigStartup_Disable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disabled.
        /// </summary>
        internal static string ConfigStartup_Disabled {
            get {
                return ResourceManager.GetString("ConfigStartup_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable Start-on-Login.
        /// </summary>
        internal static string ConfigStartup_Enable {
            get {
                return ResourceManager.GetString("ConfigStartup_Enable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enabled.
        /// </summary>
        internal static string ConfigStartup_Enabled {
            get {
                return ResourceManager.GetString("ConfigStartup_Enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent can start when you login by creating an entry in your user profile&apos;s registry.
        ///
        ///Since HASS.Agent is user based, if you want to launch for another user, just install and config
        ///HASS.Agent there..
        /// </summary>
        internal static string ConfigStartup_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigStartup_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Start-on-Login Status:.
        /// </summary>
        internal static string ConfigStartup_LblStartOnLoginStatusInfo {
            get {
                return ResourceManager.GetString("ConfigStartup_LblStartOnLoginStatusInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Show &amp;Preview.
        /// </summary>
        internal static string ConfigTrayIcon_BtnShowWebViewPreview {
            get {
                return ResourceManager.GetString("ConfigTrayIcon_BtnShowWebViewPreview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Show &amp;Default Menu.
        /// </summary>
        internal static string ConfigTrayIcon_CbDefaultMenu {
            get {
                return ResourceManager.GetString("ConfigTrayIcon_CbDefaultMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Show &amp;WebView.
        /// </summary>
        internal static string ConfigTrayIcon_CbShowWebView {
            get {
                return ResourceManager.GetString("ConfigTrayIcon_CbShowWebView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Keep page loaded in the background.
        /// </summary>
        internal static string ConfigTrayIcon_CbWebViewKeepLoaded {
            get {
                return ResourceManager.GetString("ConfigTrayIcon_CbWebViewKeepLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Show default menu on mouse left-click.
        /// </summary>
        internal static string ConfigTrayIcon_CbWebViewShowMenuOnLeftClick {
            get {
                return ResourceManager.GetString("ConfigTrayIcon_CbWebViewShowMenuOnLeftClick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Control the behaviour of the tray icon when it is right-clicked..
        /// </summary>
        internal static string ConfigTrayIcon_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigTrayIcon_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à (This uses extra resources, but reduces loading time.).
        /// </summary>
        internal static string ConfigTrayIcon_LblInfo2 {
            get {
                return ResourceManager.GetString("ConfigTrayIcon_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Size (px).
        /// </summary>
        internal static string ConfigTrayIcon_LblWebViewSize {
            get {
                return ResourceManager.GetString("ConfigTrayIcon_LblWebViewSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;WebView URL (For instance, your Home Assistant Dashboard URL).
        /// </summary>
        internal static string ConfigTrayIcon_LblWebViewUrl {
            get {
                return ResourceManager.GetString("ConfigTrayIcon_LblWebViewUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Notify me of &amp;beta releases.
        /// </summary>
        internal static string ConfigUpdates_CbBetaUpdates {
            get {
                return ResourceManager.GetString("ConfigUpdates_CbBetaUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Automatically &amp;download future updates.
        /// </summary>
        internal static string ConfigUpdates_CbExecuteUpdater {
            get {
                return ResourceManager.GetString("ConfigUpdates_CbExecuteUpdater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Notify me when a new &amp;release is available.
        /// </summary>
        internal static string ConfigUpdates_CbUpdates {
            get {
                return ResourceManager.GetString("ConfigUpdates_CbUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent checks for updates in the background if enabled.
        ///
        ///You will be sent a push notification if a new update is discovered, letting you know a
        ///new version is ready to be installed..
        /// </summary>
        internal static string ConfigUpdates_LblInfo1 {
            get {
                return ResourceManager.GetString("ConfigUpdates_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à When a new update is available, HASS.Agent can download the installer and launch it for you.
        ///
        ///The certificate of the downloaded file will get checked before running,you will still get to review the release notes and manually approve the update..
        /// </summary>
        internal static string ConfigUpdates_LblInfo2 {
            get {
                return ResourceManager.GetString("ConfigUpdates_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;About.
        /// </summary>
        internal static string Configuration_BtnAbout {
            get {
                return ResourceManager.GetString("Configuration_BtnAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Close &amp;Without Saving.
        /// </summary>
        internal static string Configuration_BtnClose {
            get {
                return ResourceManager.GetString("Configuration_BtnClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Help &amp;&amp; Contact.
        /// </summary>
        internal static string Configuration_BtnHelp {
            get {
                return ResourceManager.GetString("Configuration_BtnHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Save Configuration.
        /// </summary>
        internal static string Configuration_BtnStore {
            get {
                return ResourceManager.GetString("Configuration_BtnStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Busy, please wait...
        /// </summary>
        internal static string Configuration_BtnStore_Busy {
            get {
                return ResourceManager.GetString("Configuration_BtnStore_Busy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Your Home Assistant API token doesn&apos;t look right. Make sure you selected the entire token (don&apos;t use CTRL+A or doubleclick).
        ///It should contain three sections (seperated by two dots).
        ///
        ///Are you sure you want to use it like this?.
        /// </summary>
        internal static string Configuration_CheckValues_MessageBox1 {
            get {
                return ResourceManager.GetString("Configuration_CheckValues_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Your Home Assistant URI doesn&apos;t look right. It should look something like &apos;http://homeassistant.local:8123&apos; or &apos;https://192.168.0.1:8123&apos;.
        ///
        ///Are you sure you want to use it like this?.
        /// </summary>
        internal static string Configuration_CheckValues_MessageBox2 {
            get {
                return ResourceManager.GetString("Configuration_CheckValues_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Your MQTT broker URI doesn&apos;t look right. It should look something like &apos;homeassistant.local&apos; or &apos;192.168.0.1&apos;.
        ///
        ///Are you sure you want to use it like this?.
        /// </summary>
        internal static string Configuration_CheckValues_MessageBox3 {
            get {
                return ResourceManager.GetString("Configuration_CheckValues_MessageBox3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Something went wrong while preparing to restart.
        ///Please restart manually..
        /// </summary>
        internal static string Configuration_MessageBox_RestartManually {
            get {
                return ResourceManager.GetString("Configuration_MessageBox_RestartManually", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You&apos;ve changed your device&apos;s name.
        ///
        ///All your sensors and commands will now be unpublished, and HASS.Agent will restart afterwards to republish them.
        ///
        ///Don&apos;t worry, they&apos;ll keep their current names, so your automations or scripts will keep working.
        ///
        ///Note: the name will get &apos;sanitized&apos;, which means everything except letters, digits and whitespace get replaced by an underscore. This is required by HA..
        /// </summary>
        internal static string Configuration_ProcessChanges_MessageBox1 {
            get {
                return ResourceManager.GetString("Configuration_ProcessChanges_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You&apos;ve changed the local API&apos;s port. This new port needs to be reserved.
        ///
        ///You&apos;ll get an UAC request to do so, please approve..
        /// </summary>
        internal static string Configuration_ProcessChanges_MessageBox2 {
            get {
                return ResourceManager.GetString("Configuration_ProcessChanges_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Something went wrong!
        ///
        ///Please manually execute the required command. It has been copied onto your clipboard, you just need to paste it into an elevated command prompt.
        ///
        ///Remember to change your firewall rule&apos;s port as well..
        /// </summary>
        internal static string Configuration_ProcessChanges_MessageBox3 {
            get {
                return ResourceManager.GetString("Configuration_ProcessChanges_MessageBox3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The port has succesfully been reserved!
        ///
        ///HASS.Agent will now restart to activate the new configuration..
        /// </summary>
        internal static string Configuration_ProcessChanges_MessageBox4 {
            get {
                return ResourceManager.GetString("Configuration_ProcessChanges_MessageBox4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Your configuration has been saved. Most changes require HASS.Agent to restart before they take effect.
        ///
        ///Do you want to restart now?.
        /// </summary>
        internal static string Configuration_ProcessChanges_MessageBox5 {
            get {
                return ResourceManager.GetString("Configuration_ProcessChanges_MessageBox5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You&apos;ve changed your device&apos;s name.
        ///
        ///All your sensors and commands will now be unpublished and published again after the HASS.Agent restarts.
        ///
        ///Don&apos;t worry! they&apos;ll keep their current names so your automations and scripts will continue to work.
        ///
        ///Note: You disabled sanitation, so make sure your device name is accepted by Home Assistant..
        /// </summary>
        internal static string Configuration_ProcessChanges_MessageBox6 {
            get {
                return ResourceManager.GetString("Configuration_ProcessChanges_MessageBox6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à External Tools.
        /// </summary>
        internal static string Configuration_TabExternalTools {
            get {
                return ResourceManager.GetString("Configuration_TabExternalTools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à General.
        /// </summary>
        internal static string Configuration_TabGeneral {
            get {
                return ResourceManager.GetString("Configuration_TabGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Home Assistant API.
        /// </summary>
        internal static string Configuration_TabHassApi {
            get {
                return ResourceManager.GetString("Configuration_TabHassApi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Hotkey.
        /// </summary>
        internal static string Configuration_TabHotKey {
            get {
                return ResourceManager.GetString("Configuration_TabHotKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Local API.
        /// </summary>
        internal static string Configuration_TablLocalApi {
            get {
                return ResourceManager.GetString("Configuration_TablLocalApi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Local Storage.
        /// </summary>
        internal static string Configuration_TabLocalStorage {
            get {
                return ResourceManager.GetString("Configuration_TabLocalStorage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Logging.
        /// </summary>
        internal static string Configuration_TabLogging {
            get {
                return ResourceManager.GetString("Configuration_TabLogging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Media Player.
        /// </summary>
        internal static string Configuration_TabMediaPlayer {
            get {
                return ResourceManager.GetString("Configuration_TabMediaPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MQTT.
        /// </summary>
        internal static string Configuration_TabMQTT {
            get {
                return ResourceManager.GetString("Configuration_TabMQTT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Notifications.
        /// </summary>
        internal static string Configuration_TabNotifications {
            get {
                return ResourceManager.GetString("Configuration_TabNotifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Satellite Service.
        /// </summary>
        internal static string Configuration_TabService {
            get {
                return ResourceManager.GetString("Configuration_TabService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Startup.
        /// </summary>
        internal static string Configuration_TabStartup {
            get {
                return ResourceManager.GetString("Configuration_TabStartup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Tray Icon.
        /// </summary>
        internal static string Configuration_TabTrayIcon {
            get {
                return ResourceManager.GetString("Configuration_TabTrayIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Updates.
        /// </summary>
        internal static string Configuration_TabUpdates {
            get {
                return ResourceManager.GetString("Configuration_TabUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Configuration.
        /// </summary>
        internal static string Configuration_Title {
            get {
                return ResourceManager.GetString("Configuration_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Close.
        /// </summary>
        internal static string Donate_BtnClose {
            get {
                return ResourceManager.GetString("Donate_BtnClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à I already donated, hide the button on the main window..
        /// </summary>
        internal static string Donate_CbHideDonateButton {
            get {
                return ResourceManager.GetString("Donate_CbHideDonateButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent is completely free, and will always stay that way without restrictions!
        ///
        ///However, developing and maintaining this tool (and everything that surrounds it, like support and the docs) takes up a lot of time. 
        ///
        ///Like most developers, I run on caffeïne - so if you can spare it, a cup of coffee is always very much appreciated!.
        /// </summary>
        internal static string Donate_LblInfo {
            get {
                return ResourceManager.GetString("Donate_LblInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Donate.
        /// </summary>
        internal static string Donate_Title {
            get {
                return ResourceManager.GetString("Donate_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Exit.
        /// </summary>
        internal static string ExitDialog_BtnExit {
            get {
                return ResourceManager.GetString("ExitDialog_BtnExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Hide.
        /// </summary>
        internal static string ExitDialog_BtnHide {
            get {
                return ResourceManager.GetString("ExitDialog_BtnHide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Restart.
        /// </summary>
        internal static string ExitDialog_BtnRestart {
            get {
                return ResourceManager.GetString("ExitDialog_BtnRestart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à What would you like to do?.
        /// </summary>
        internal static string ExitDialog_LblInfo1 {
            get {
                return ResourceManager.GetString("ExitDialog_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Exit Dialog.
        /// </summary>
        internal static string ExitDialog_Title {
            get {
                return ResourceManager.GetString("ExitDialog_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Close.
        /// </summary>
        internal static string HassAction_Close {
            get {
                return ResourceManager.GetString("HassAction_Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Off.
        /// </summary>
        internal static string HassAction_Off {
            get {
                return ResourceManager.GetString("HassAction_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à On.
        /// </summary>
        internal static string HassAction_On {
            get {
                return ResourceManager.GetString("HassAction_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Open.
        /// </summary>
        internal static string HassAction_Open {
            get {
                return ResourceManager.GetString("HassAction_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Pause.
        /// </summary>
        internal static string HassAction_Pause {
            get {
                return ResourceManager.GetString("HassAction_Pause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Play.
        /// </summary>
        internal static string HassAction_Play {
            get {
                return ResourceManager.GetString("HassAction_Play", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Stop.
        /// </summary>
        internal static string HassAction_Stop {
            get {
                return ResourceManager.GetString("HassAction_Stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Toggle.
        /// </summary>
        internal static string HassAction_Toggle {
            get {
                return ResourceManager.GetString("HassAction_Toggle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client certificate file not found..
        /// </summary>
        internal static string HassApiManager_CheckHassConfig_CertNotFound {
            get {
                return ResourceManager.GetString("HassApiManager_CheckHassConfig_CertNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unable to fetch configuration, please check API key..
        /// </summary>
        internal static string HassApiManager_CheckHassConfig_ConfigFailed {
            get {
                return ResourceManager.GetString("HassApiManager_CheckHassConfig_ConfigFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unable to connect, check URI..
        /// </summary>
        internal static string HassApiManager_CheckHassConfig_UnableToConnect {
            get {
                return ResourceManager.GetString("HassApiManager_CheckHassConfig_UnableToConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unable to connect, please check URI and configuration..
        /// </summary>
        internal static string HassApiManager_ConnectionFailed {
            get {
                return ResourceManager.GetString("HassApiManager_ConnectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS API: Connection failed..
        /// </summary>
        internal static string HassApiManager_ToolTip_ConnectionFailed {
            get {
                return ResourceManager.GetString("HassApiManager_ToolTip_ConnectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS API: Connection setup failed..
        /// </summary>
        internal static string HassApiManager_ToolTip_ConnectionSetupFailed {
            get {
                return ResourceManager.GetString("HassApiManager_ToolTip_ConnectionSetupFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS API: Initial connection failed..
        /// </summary>
        internal static string HassApiManager_ToolTip_InitialConnectionFailed {
            get {
                return ResourceManager.GetString("HassApiManager_ToolTip_InitialConnectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à quick action: action failed, check the logs for info.
        /// </summary>
        internal static string HassApiManager_ToolTip_QuickActionFailed {
            get {
                return ResourceManager.GetString("HassApiManager_ToolTip_QuickActionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à quick action: action failed, entity not found.
        /// </summary>
        internal static string HassApiManager_ToolTip_QuickActionFailedOnEntity {
            get {
                return ResourceManager.GetString("HassApiManager_ToolTip_QuickActionFailedOnEntity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Automation.
        /// </summary>
        internal static string HassDomain_Automation {
            get {
                return ResourceManager.GetString("HassDomain_Automation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Climate.
        /// </summary>
        internal static string HassDomain_Climate {
            get {
                return ResourceManager.GetString("HassDomain_Climate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cover.
        /// </summary>
        internal static string HassDomain_Cover {
            get {
                return ResourceManager.GetString("HassDomain_Cover", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent Commands.
        /// </summary>
        internal static string HassDomain_HASSAgentCommands {
            get {
                return ResourceManager.GetString("HassDomain_HASSAgentCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à InputBoolean.
        /// </summary>
        internal static string HassDomain_InputBoolean {
            get {
                return ResourceManager.GetString("HassDomain_InputBoolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Light.
        /// </summary>
        internal static string HassDomain_Light {
            get {
                return ResourceManager.GetString("HassDomain_Light", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MediaPlayer.
        /// </summary>
        internal static string HassDomain_MediaPlayer {
            get {
                return ResourceManager.GetString("HassDomain_MediaPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Scene.
        /// </summary>
        internal static string HassDomain_Scene {
            get {
                return ResourceManager.GetString("HassDomain_Scene", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Script.
        /// </summary>
        internal static string HassDomain_Script {
            get {
                return ResourceManager.GetString("HassDomain_Script", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Switch.
        /// </summary>
        internal static string HassDomain_Switch {
            get {
                return ResourceManager.GetString("HassDomain_Switch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Close.
        /// </summary>
        internal static string Help_BtnClose {
            get {
                return ResourceManager.GetString("Help_BtnClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à About.
        /// </summary>
        internal static string Help_LblAbout {
            get {
                return ResourceManager.GetString("Help_LblAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Get help with setting up and using HASS.Agent, 
        ///report bugs or get involved in general chit-chat!.
        /// </summary>
        internal static string Help_LblDiscordInfo {
            get {
                return ResourceManager.GetString("Help_LblDiscordInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Documentation.
        /// </summary>
        internal static string Help_LblDocumentation {
            get {
                return ResourceManager.GetString("Help_LblDocumentation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Documentation and Usage Examples.
        /// </summary>
        internal static string Help_LblDocumentationInfo {
            get {
                return ResourceManager.GetString("Help_LblDocumentationInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à GitHub Issues.
        /// </summary>
        internal static string Help_LblGitHub {
            get {
                return ResourceManager.GetString("Help_LblGitHub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Report bugs, post feature requests, see latest changes, etc..
        /// </summary>
        internal static string Help_LblGitHubInfo {
            get {
                return ResourceManager.GetString("Help_LblGitHubInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Home Assistant Forum.
        /// </summary>
        internal static string Help_LblHAForum {
            get {
                return ResourceManager.GetString("Help_LblHAForum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Bit of everything, with the addition that other
        ///HA users can help you out too!.
        /// </summary>
        internal static string Help_LblHAInfo {
            get {
                return ResourceManager.GetString("Help_LblHAInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à If you are having trouble with HASS.Agent and require support
        ///with any sensors, commands, or for general support and feedback,
        ///there are few ways you can reach us:.
        /// </summary>
        internal static string Help_LblInfo1 {
            get {
                return ResourceManager.GetString("Help_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Wiki.
        /// </summary>
        internal static string Help_LblWiki {
            get {
                return ResourceManager.GetString("Help_LblWiki", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Browse HASS.Agent documentation and usage examples..
        /// </summary>
        internal static string Help_LblWikiInfo {
            get {
                return ResourceManager.GetString("Help_LblWikiInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Help.
        /// </summary>
        internal static string Help_Title {
            get {
                return ResourceManager.GetString("Help_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Your input language &apos;{0}&apos; is known to collide with the default CTRL-ALT-Q hotkey. Please set your own..
        /// </summary>
        internal static string HelperFunctions_InputLanguageCheckDiffers_ErrorMsg1 {
            get {
                return ResourceManager.GetString("HelperFunctions_InputLanguageCheckDiffers_ErrorMsg1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Your input language &apos;{0}&apos; is unknown, and might collide with the default CTRL-ALT-Q hotkey. Please check to be sure. If it does, consider opening a ticket on GitHub so it can be added to the list..
        /// </summary>
        internal static string HelperFunctions_InputLanguageCheckDiffers_ErrorMsg2 {
            get {
                return ResourceManager.GetString("HelperFunctions_InputLanguageCheckDiffers_ErrorMsg2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No keys found.
        /// </summary>
        internal static string HelperFunctions_ParseMultipleKeys_ErrorMsg1 {
            get {
                return ResourceManager.GetString("HelperFunctions_ParseMultipleKeys_ErrorMsg1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à brackets missing, start and close all keys with [ ].
        /// </summary>
        internal static string HelperFunctions_ParseMultipleKeys_ErrorMsg2 {
            get {
                return ResourceManager.GetString("HelperFunctions_ParseMultipleKeys_ErrorMsg2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error while parsing keys, please check the logs for more information..
        /// </summary>
        internal static string HelperFunctions_ParseMultipleKeys_ErrorMsg3 {
            get {
                return ResourceManager.GetString("HelperFunctions_ParseMultipleKeys_ErrorMsg3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The number of open brackets (&apos;[&apos;) does not correspond to the number of closed brackets. (&apos;]&apos;)! ({0} to {1}).
        /// </summary>
        internal static string HelperFunctions_ParseMultipleKeys_ErrorMsg4 {
            get {
                return ResourceManager.GetString("HelperFunctions_ParseMultipleKeys_ErrorMsg4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error trying to bind the API to port {0}.
        ///
        ///Make sure no other instance of HASS.Agent is running and the port is available and registered..
        /// </summary>
        internal static string LocalApiManager_Initialize_MessageBox1 {
            get {
                return ResourceManager.GetString("LocalApiManager_Initialize_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Locked.
        /// </summary>
        internal static string LockState_Locked {
            get {
                return ResourceManager.GetString("LockState_Locked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unknown.
        /// </summary>
        internal static string LockState_Unknown {
            get {
                return ResourceManager.GetString("LockState_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unlocked.
        /// </summary>
        internal static string LockState_Unlocked {
            get {
                return ResourceManager.GetString("LockState_Unlocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Quick Actions.
        /// </summary>
        internal static string Main_BtnActionsManager {
            get {
                return ResourceManager.GetString("Main_BtnActionsManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à C&amp;onfiguration.
        /// </summary>
        internal static string Main_BtnAppSettings {
            get {
                return ResourceManager.GetString("Main_BtnAppSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Check for &amp;Updates.
        /// </summary>
        internal static string Main_BtnCheckForUpdate {
            get {
                return ResourceManager.GetString("Main_BtnCheckForUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Loading...
        /// </summary>
        internal static string Main_BtnCommandsManager {
            get {
                return ResourceManager.GetString("Main_BtnCommandsManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Commands.
        /// </summary>
        internal static string Main_BtnCommandsManager_Ready {
            get {
                return ResourceManager.GetString("Main_BtnCommandsManager_Ready", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Hide.
        /// </summary>
        internal static string Main_BtnHide {
            get {
                return ResourceManager.GetString("Main_BtnHide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Sensors.
        /// </summary>
        internal static string Main_BtnSensorsManage_Ready {
            get {
                return ResourceManager.GetString("Main_BtnSensorsManage_Ready", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Loading...
        /// </summary>
        internal static string Main_BtnSensorsManager {
            get {
                return ResourceManager.GetString("Main_BtnSensorsManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à S&amp;atellite Service.
        /// </summary>
        internal static string Main_BtnServiceManager {
            get {
                return ResourceManager.GetString("Main_BtnServiceManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à It looks like you&apos;re using an alternative scaling. This may result in some parts of HASS.Agent not looking as intended.
        ///
        ///Please report any unusable aspects on GitHub. Thanks!
        ///
        ///Note: this message only shows once..
        /// </summary>
        internal static string Main_CheckDpiScalingFactor_MessageBox1 {
            get {
                return ResourceManager.GetString("Main_CheckDpiScalingFactor_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You&apos;re running the latest version: {0}{1}.
        /// </summary>
        internal static string Main_CheckForUpdate_MessageBox1 {
            get {
                return ResourceManager.GetString("Main_CheckForUpdate_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Check for Updates.
        /// </summary>
        internal static string Main_CheckForUpdates {
            get {
                return ResourceManager.GetString("Main_CheckForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Checking...
        /// </summary>
        internal static string Main_Checking {
            get {
                return ResourceManager.GetString("Main_Checking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Controls.
        /// </summary>
        internal static string Main_GpControls {
            get {
                return ResourceManager.GetString("Main_GpControls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à System Status.
        /// </summary>
        internal static string Main_GpStatus {
            get {
                return ResourceManager.GetString("Main_GpStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Commands:.
        /// </summary>
        internal static string Main_LblCommands {
            get {
                return ResourceManager.GetString("Main_LblCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Home Assistant API:.
        /// </summary>
        internal static string Main_LblHomeAssistantApi {
            get {
                return ResourceManager.GetString("Main_LblHomeAssistantApi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Local API:.
        /// </summary>
        internal static string Main_LblLocalApi {
            get {
                return ResourceManager.GetString("Main_LblLocalApi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MQTT:.
        /// </summary>
        internal static string Main_LblMqtt {
            get {
                return ResourceManager.GetString("Main_LblMqtt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à notification api:.
        /// </summary>
        internal static string Main_LblNotificationApi {
            get {
                return ResourceManager.GetString("Main_LblNotificationApi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Quick Actions:.
        /// </summary>
        internal static string Main_LblQuickActions {
            get {
                return ResourceManager.GetString("Main_LblQuickActions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sensors:.
        /// </summary>
        internal static string Main_LblSensors {
            get {
                return ResourceManager.GetString("Main_LblSensors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Satellite Service:.
        /// </summary>
        internal static string Main_LblService {
            get {
                return ResourceManager.GetString("Main_LblService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Something went wrong while loading your settings.
        ///
        ///Check appsettings.json in the &apos;config&apos; subfolder, or just delete it to start fresh..
        /// </summary>
        internal static string Main_Load_MessageBox1 {
            get {
                return ResourceManager.GetString("Main_Load_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à There was an error launching HASS.Agent.
        ///Please check the logs and make a bug report on GitHub..
        /// </summary>
        internal static string Main_Load_MessageBox2 {
            get {
                return ResourceManager.GetString("Main_Load_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No URL has been set! Please configure the webview through Configuration -&gt; Tray Icon..
        /// </summary>
        internal static string Main_NotifyIcon_MouseClick_MessageBox1 {
            get {
                return ResourceManager.GetString("Main_NotifyIcon_MouseClick_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à About.
        /// </summary>
        internal static string Main_TsAbout {
            get {
                return ResourceManager.GetString("Main_TsAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Check for Updates.
        /// </summary>
        internal static string Main_TsCheckForUpdates {
            get {
                return ResourceManager.GetString("Main_TsCheckForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Manage Commands.
        /// </summary>
        internal static string Main_TsCommands {
            get {
                return ResourceManager.GetString("Main_TsCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Configuration.
        /// </summary>
        internal static string Main_TsConfig {
            get {
                return ResourceManager.GetString("Main_TsConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Donate.
        /// </summary>
        internal static string Main_TsDonate {
            get {
                return ResourceManager.GetString("Main_TsDonate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Exit HASS.Agent.
        /// </summary>
        internal static string Main_TsExit {
            get {
                return ResourceManager.GetString("Main_TsExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Help &amp;&amp; Contact.
        /// </summary>
        internal static string Main_TsHelp {
            get {
                return ResourceManager.GetString("Main_TsHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Manage Local Sensors.
        /// </summary>
        internal static string Main_TsLocalSensors {
            get {
                return ResourceManager.GetString("Main_TsLocalSensors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Manage Quick Actions.
        /// </summary>
        internal static string Main_TsQuickItemsConfig {
            get {
                return ResourceManager.GetString("Main_TsQuickItemsConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Manage Satellite Service.
        /// </summary>
        internal static string Main_TsSatelliteService {
            get {
                return ResourceManager.GetString("Main_TsSatelliteService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Show HASS.Agent.
        /// </summary>
        internal static string Main_TsShow {
            get {
                return ResourceManager.GetString("Main_TsShow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Show Quick Actions.
        /// </summary>
        internal static string Main_TsShowQuickActions {
            get {
                return ResourceManager.GetString("Main_TsShowQuickActions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Dimmed.
        /// </summary>
        internal static string MonitorPowerEvent_Dimmed {
            get {
                return ResourceManager.GetString("MonitorPowerEvent_Dimmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à PowerOff.
        /// </summary>
        internal static string MonitorPowerEvent_PowerOff {
            get {
                return ResourceManager.GetString("MonitorPowerEvent_PowerOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à PowerOn.
        /// </summary>
        internal static string MonitorPowerEvent_PowerOn {
            get {
                return ResourceManager.GetString("MonitorPowerEvent_PowerOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unknown.
        /// </summary>
        internal static string MonitorPowerEvent_Unknown {
            get {
                return ResourceManager.GetString("MonitorPowerEvent_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MQTT: Error while connecting.
        /// </summary>
        internal static string MqttManager_ToolTip_ConnectionError {
            get {
                return ResourceManager.GetString("MqttManager_ToolTip_ConnectionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MQTT: Failed to connect.
        /// </summary>
        internal static string MqttManager_ToolTip_ConnectionFailed {
            get {
                return ResourceManager.GetString("MqttManager_ToolTip_ConnectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MQTT: Disconnected.
        /// </summary>
        internal static string MqttManager_ToolTip_Disconnected {
            get {
                return ResourceManager.GetString("MqttManager_ToolTip_Disconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error trying to bind the API to port {0}.
        ///
        ///Make sure no other instance of HASS.Agent is running and the port is available and registered..
        /// </summary>
        internal static string NotifierManager_Initialize_MessageBox1 {
            get {
                return ResourceManager.GetString("NotifierManager_Initialize_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Close.
        /// </summary>
        internal static string Onboarding_BtnClose {
            get {
                return ResourceManager.GetString("Onboarding_BtnClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Next.
        /// </summary>
        internal static string Onboarding_BtnNext {
            get {
                return ResourceManager.GetString("Onboarding_BtnNext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Previous.
        /// </summary>
        internal static string Onboarding_BtnPrevious {
            get {
                return ResourceManager.GetString("Onboarding_BtnPrevious", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent Onboarding.
        /// </summary>
        internal static string Onboarding_Onboarding {
            get {
                return ResourceManager.GetString("Onboarding_Onboarding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent Onboarding.
        /// </summary>
        internal static string Onboarding_Title {
            get {
                return ResourceManager.GetString("Onboarding_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Test &amp;Connection.
        /// </summary>
        internal static string OnboardingApi_BtnTest {
            get {
                return ResourceManager.GetString("OnboardingApi_BtnTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please provide a valid API key..
        /// </summary>
        internal static string OnboardingApi_BtnTest_MessageBox1 {
            get {
                return ResourceManager.GetString("OnboardingApi_BtnTest_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please enter your Home Assistant&apos;s URI..
        /// </summary>
        internal static string OnboardingApi_BtnTest_MessageBox2 {
            get {
                return ResourceManager.GetString("OnboardingApi_BtnTest_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unable to connect, the following error was returned:
        ///
        ///{0}.
        /// </summary>
        internal static string OnboardingApi_BtnTest_MessageBox3 {
            get {
                return ResourceManager.GetString("OnboardingApi_BtnTest_MessageBox3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Connection OK!
        ///
        ///Home Assistant version: {0}.
        /// </summary>
        internal static string OnboardingApi_BtnTest_MessageBox4 {
            get {
                return ResourceManager.GetString("OnboardingApi_BtnTest_MessageBox4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The API token you have provided doesn&apos;t appear to be valid, please ensure you selected the entire token (Don&apos;t use CTRL + A or double-click). A valid API key contains three sections, separated by two dots.
        ///
        ///Are you sure you want to use this key anyway?.
        /// </summary>
        internal static string OnboardingApi_BtnTest_MessageBox5 {
            get {
                return ResourceManager.GetString("OnboardingApi_BtnTest_MessageBox5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The URI you have provided does not appear to be valid, a valid URI may look like either of the following:
        ///- http://homeassistant.local:8123
        ///- http://192.168.0.1:8123
        ///
        ///Are you sure you want to use this URI anyway?.
        /// </summary>
        internal static string OnboardingApi_BtnTest_MessageBox6 {
            get {
                return ResourceManager.GetString("OnboardingApi_BtnTest_MessageBox6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Testing...
        /// </summary>
        internal static string OnboardingApi_BtnTest_Testing {
            get {
                return ResourceManager.GetString("OnboardingApi_BtnTest_Testing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à API &amp;Token.
        /// </summary>
        internal static string OnboardingApi_LblApiToken {
            get {
                return ResourceManager.GetString("OnboardingApi_LblApiToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à To learn which entities you have configured and to send quick actions, HASS.Agent uses
        ///Home Assistant&apos;s API.
        ///
        ///Please provide a long-lived access token and the address of your Home Assistant instance.
        ///You can get a token in Home Assistant by clicking your profile picture at the bottom-left
        ///and navigating to the bottom of the page until you see the &apos;CREATE TOKEN&apos; button..
        /// </summary>
        internal static string OnboardingApi_LblInfo1 {
            get {
                return ResourceManager.GetString("OnboardingApi_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Server &amp;URI (should be ok like this).
        /// </summary>
        internal static string OnboardingApi_LblServerUri {
            get {
                return ResourceManager.GetString("OnboardingApi_LblServerUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Tip: Specialized settings can be found in the Configuration Window..
        /// </summary>
        internal static string OnboardingApi_LblTip1 {
            get {
                return ResourceManager.GetString("OnboardingApi_LblTip1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent GitHub page.
        /// </summary>
        internal static string OnboardingDone_LblGitHub {
            get {
                return ResourceManager.GetString("OnboardingDone_LblGitHub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Yay, done!.
        /// </summary>
        internal static string OnboardingDone_LblInfo1 {
            get {
                return ResourceManager.GetString("OnboardingDone_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent will now restart to apply your configuration changes..
        /// </summary>
        internal static string OnboardingDone_LblInfo2 {
            get {
                return ResourceManager.GetString("OnboardingDone_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à There&apos;s a lot more to tinker with, so make sure you take a look at the Configuration Wwindow!
        ///
        ///
        ///Thank you for using HASS.Agent, hopefully it&apos;ll be useful for you :-)
        ///.
        /// </summary>
        internal static string OnboardingDone_LblInfo3 {
            get {
                return ResourceManager.GetString("OnboardingDone_LblInfo3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Developing and maintaining this tool (and everything that surrounds it) takes up a lot of time. Like most developers, I run on caffeïne - so if you can spare it, a cup of coffee is always very much appreciated!.
        /// </summary>
        internal static string OnboardingDone_LblInfo6 {
            get {
                return ResourceManager.GetString("OnboardingDone_LblInfo6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Tip: Other donation methods are available on the About Window..
        /// </summary>
        internal static string OnboardingDone_LblTip2 {
            get {
                return ResourceManager.GetString("OnboardingDone_LblTip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Clear.
        /// </summary>
        internal static string OnboardingHotKey_BtnClear {
            get {
                return ResourceManager.GetString("OnboardingHotKey_BtnClear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Hotkey Combination.
        /// </summary>
        internal static string OnboardingHotKey_LblHotkeyCombo {
            get {
                return ResourceManager.GetString("OnboardingHotKey_LblHotkeyCombo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An easy way to pull up your quick actions is to use a global hotkey.
        ///
        ///This way, whatever you&apos;re doing on your machine, you can always interact with Home Assistant.
        ///.
        /// </summary>
        internal static string OnboardingHotKey_LblInfo1 {
            get {
                return ResourceManager.GetString("OnboardingHotKey_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à To use notifications, you need to install and configure the HASS.Agent-notifier integration in
        ///Home Assistant.
        ///
        ///This is very easy using HACS but may also be installed manually, visit the link below for more
        ///information..
        /// </summary>
        internal static string OnboardingIntegration_LblInfo1 {
            get {
                return ResourceManager.GetString("OnboardingIntegration_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Make sure you follow these steps:
        ///
        ///- Install HASS.Agent-Notifier integration
        ///- Restart Home Assistant
        ///- Configure a notifier entity
        ///- Restart Home Assistant.
        /// </summary>
        internal static string OnboardingIntegration_LblInfo2 {
            get {
                return ResourceManager.GetString("OnboardingIntegration_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent-Notifier GitHub Page.
        /// </summary>
        internal static string OnboardingIntegration_LblIntegration {
            get {
                return ResourceManager.GetString("OnboardingIntegration_LblIntegration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable &amp;Media Player (including text-to-speech).
        /// </summary>
        internal static string OnboardingIntegrations_CbEnableMediaPlayer {
            get {
                return ResourceManager.GetString("OnboardingIntegrations_CbEnableMediaPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable &amp;Notifications.
        /// </summary>
        internal static string OnboardingIntegrations_CbEnableNotifications {
            get {
                return ResourceManager.GetString("OnboardingIntegrations_CbEnableNotifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à To use notifications, you need to install and configure the HASS.Agent-notifier integration in
        ///Home Assistant.
        ///
        ///This is very easy using HACS, but you can also install manually. Visit the link below for more
        ///information..
        /// </summary>
        internal static string OnboardingIntegrations_LblInfo1 {
            get {
                return ResourceManager.GetString("OnboardingIntegrations_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Make sure you follow these steps:
        ///
        ///- Install the HASS.Agent-Notifier and / or HASS.Agent-MediaPlayer integration
        ///- Restart Home Assistant
        ///-Configure a notifier and / or media_player entity
        ///-Restart Home Assistant.
        /// </summary>
        internal static string OnboardingIntegrations_LblInfo2 {
            get {
                return ResourceManager.GetString("OnboardingIntegrations_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The same goes for the media player, this integration allows you to control your device as a media_player entity, see what&apos;s playing and send text-to-speech..
        /// </summary>
        internal static string OnboardingIntegrations_LblInfo3 {
            get {
                return ResourceManager.GetString("OnboardingIntegrations_LblInfo3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent-MediaPlayer GitHub Page.
        /// </summary>
        internal static string OnboardingIntegrations_LblMediaPlayerIntegration {
            get {
                return ResourceManager.GetString("OnboardingIntegrations_LblMediaPlayerIntegration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent-Integration GitHub Page.
        /// </summary>
        internal static string OnboardingIntegrations_LblNotifierIntegration {
            get {
                return ResourceManager.GetString("OnboardingIntegrations_LblNotifierIntegration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Yes, &amp;enable the local API on port.
        /// </summary>
        internal static string OnboardingLocalApi_CbEnableLocalApi {
            get {
                return ResourceManager.GetString("OnboardingLocalApi_CbEnableLocalApi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable &amp;Media Player and text-to-speech (TTS).
        /// </summary>
        internal static string OnboardingLocalApi_CbEnableMediaPlayer {
            get {
                return ResourceManager.GetString("OnboardingLocalApi_CbEnableMediaPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable &amp;Notifications.
        /// </summary>
        internal static string OnboardingLocalApi_CbEnableNotifications {
            get {
                return ResourceManager.GetString("OnboardingLocalApi_CbEnableNotifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent has its own internal API, so Home Assistant can send requests (like notifications or text-to-speech).
        ///
        ///Do you want to enable it?.
        /// </summary>
        internal static string OnboardingLocalApi_LblInfo1 {
            get {
                return ResourceManager.GetString("OnboardingLocalApi_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You can choose what modules you want to enable. They require HA integrations, but don&apos;t worry, the next page will give you more info on how to set them up..
        /// </summary>
        internal static string OnboardingLocalApi_LblInfo2 {
            get {
                return ResourceManager.GetString("OnboardingLocalApi_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Note: 5115 is the default port, only change it if you changed it in Home Assistant..
        /// </summary>
        internal static string OnboardingLocalApi_LblTip1 {
            get {
                return ResourceManager.GetString("OnboardingLocalApi_LblTip1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Finish.
        /// </summary>
        internal static string OnboardingManager_BtnNext_Finish {
            get {
                return ResourceManager.GetString("OnboardingManager_BtnNext_Finish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Are you sure you want to abort the onboarding process?
        ///
        ///Your progress will not be saved, and it will not be shown again on next launch..
        /// </summary>
        internal static string OnboardingManager_ConfirmBeforeClose_MessageBox1 {
            get {
                return ResourceManager.GetString("OnboardingManager_ConfirmBeforeClose_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent Onboarding: API [{0}/{1}].
        /// </summary>
        internal static string OnboardingManager_OnboardingTitle_Api {
            get {
                return ResourceManager.GetString("OnboardingManager_OnboardingTitle_Api", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent Onboarding: Completed [{0}/{1}].
        /// </summary>
        internal static string OnboardingManager_OnboardingTitle_Completed {
            get {
                return ResourceManager.GetString("OnboardingManager_OnboardingTitle_Completed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent Onboarding: HotKey [{0}/{1}].
        /// </summary>
        internal static string OnboardingManager_OnboardingTitle_HotKey {
            get {
                return ResourceManager.GetString("OnboardingManager_OnboardingTitle_HotKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent Onboarding: Integration [{0}/{1}].
        /// </summary>
        internal static string OnboardingManager_OnboardingTitle_Integration {
            get {
                return ResourceManager.GetString("OnboardingManager_OnboardingTitle_Integration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent Onboarding: MQTT [{0}/{1}].
        /// </summary>
        internal static string OnboardingManager_OnboardingTitle_Mqtt {
            get {
                return ResourceManager.GetString("OnboardingManager_OnboardingTitle_Mqtt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent Onboarding: Notifications [{0}/{1}].
        /// </summary>
        internal static string OnboardingManager_OnboardingTitle_Notifications {
            get {
                return ResourceManager.GetString("OnboardingManager_OnboardingTitle_Notifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent Onboarding: Start [{0}/{1}].
        /// </summary>
        internal static string OnboardingManager_OnboardingTitle_Start {
            get {
                return ResourceManager.GetString("OnboardingManager_OnboardingTitle_Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent Onboarding: Startup [{0}/{1}].
        /// </summary>
        internal static string OnboardingManager_OnboardingTitle_Startup {
            get {
                return ResourceManager.GetString("OnboardingManager_OnboardingTitle_Startup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent Onboarding: Updates [{0}/{1}].
        /// </summary>
        internal static string OnboardingManager_OnboardingTitle_Updates {
            get {
                return ResourceManager.GetString("OnboardingManager_OnboardingTitle_Updates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable MQTT.
        /// </summary>
        internal static string OnboardingMqtt_CbEnableMqtt {
            get {
                return ResourceManager.GetString("OnboardingMqtt_CbEnableMqtt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;TLS.
        /// </summary>
        internal static string OnboardingMqtt_CbMqttTls {
            get {
                return ResourceManager.GetString("OnboardingMqtt_CbMqttTls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Discovery Prefix.
        /// </summary>
        internal static string OnboardingMqtt_LblDiscoveryPrefix {
            get {
                return ResourceManager.GetString("OnboardingMqtt_LblDiscoveryPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Commands and sensors are sent through MQTT. The notifications- and media player integration also make use of them.
        ///
        ///Tip: if you&apos;re using the HA addon, you can probably use the preset address - just provide credentials.
        ///.
        /// </summary>
        internal static string OnboardingMqtt_LblInfo1 {
            get {
                return ResourceManager.GetString("OnboardingMqtt_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à IP Address or Hostname.
        /// </summary>
        internal static string OnboardingMqtt_LblIpAdress {
            get {
                return ResourceManager.GetString("OnboardingMqtt_LblIpAdress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Password.
        /// </summary>
        internal static string OnboardingMqtt_LblPassword {
            get {
                return ResourceManager.GetString("OnboardingMqtt_LblPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Port.
        /// </summary>
        internal static string OnboardingMqtt_LblPort {
            get {
                return ResourceManager.GetString("OnboardingMqtt_LblPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à (leave default if not sure).
        /// </summary>
        internal static string OnboardingMqtt_LblTip1 {
            get {
                return ResourceManager.GetString("OnboardingMqtt_LblTip1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Tip: Specialized settings can be found in the Configuration Window..
        /// </summary>
        internal static string OnboardingMqtt_LblTip2 {
            get {
                return ResourceManager.GetString("OnboardingMqtt_LblTip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Username.
        /// </summary>
        internal static string OnboardingMqtt_LblUsername {
            get {
                return ResourceManager.GetString("OnboardingMqtt_LblUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Yes, accept notifications on port.
        /// </summary>
        internal static string OnboardingNotifications_CbAcceptNotifications {
            get {
                return ResourceManager.GetString("OnboardingNotifications_CbAcceptNotifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent can receive notifications from Home Assistant, using text and/or images.
        ///
        ///Do you want to enable this function?.
        /// </summary>
        internal static string OnboardingNotifications_LblInfo1 {
            get {
                return ResourceManager.GetString("OnboardingNotifications_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Note: 5115 is the default port, only change it if you changed it in Home Assistant..
        /// </summary>
        internal static string OnboardingNotifications_LblTip1 {
            get {
                return ResourceManager.GetString("OnboardingNotifications_LblTip1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Start-on-Login has been activated!.
        /// </summary>
        internal static string OnboardingStartup_Activated {
            get {
                return ResourceManager.GetString("OnboardingStartup_Activated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Activating Start-on-Login...
        /// </summary>
        internal static string OnboardingStartup_Activating {
            get {
                return ResourceManager.GetString("OnboardingStartup_Activating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Start-on-Login is already activated, all set!.
        /// </summary>
        internal static string OnboardingStartup_AlreadyActivated {
            get {
                return ResourceManager.GetString("OnboardingStartup_AlreadyActivated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Yes, &amp;start HASS.Agent on System Login.
        /// </summary>
        internal static string OnboardingStartup_BtnSetLaunchOnLogin {
            get {
                return ResourceManager.GetString("OnboardingStartup_BtnSetLaunchOnLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable Start-on-Login.
        /// </summary>
        internal static string OnboardingStartup_BtnSetLaunchOnLogin_2 {
            get {
                return ResourceManager.GetString("OnboardingStartup_BtnSetLaunchOnLogin_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Do you want to enable Start-on-Login now?.
        /// </summary>
        internal static string OnboardingStartup_EnableNow {
            get {
                return ResourceManager.GetString("OnboardingStartup_EnableNow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Something went wrong. You can try again, or skip to the next page and retry after HASS.Agent&apos;s restart..
        /// </summary>
        internal static string OnboardingStartup_Failed {
            get {
                return ResourceManager.GetString("OnboardingStartup_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Fetching current state, please wait...
        /// </summary>
        internal static string OnboardingStartup_LblCreateInfo {
            get {
                return ResourceManager.GetString("OnboardingStartup_LblCreateInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent can start with your system, this allows for any sensors and data transmission between your device and Home Assistant to begin as soon as you login.
        ///
        ///This setting can be changed any time later in the HASS.Agent configuration window..
        /// </summary>
        internal static string OnboardingStartup_LblInfo1 {
            get {
                return ResourceManager.GetString("OnboardingStartup_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Yes, &amp;download and launch the installer for me.
        /// </summary>
        internal static string OnboardingUpdates_CbExecuteUpdater {
            get {
                return ResourceManager.GetString("OnboardingUpdates_CbExecuteUpdater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Yes, notify me on new &amp;updates.
        /// </summary>
        internal static string OnboardingUpdates_CbNofityOnUpdate {
            get {
                return ResourceManager.GetString("OnboardingUpdates_CbNofityOnUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent checks for updates in the background if enabled.
        ///
        ///You will be sent a push notification if a new update is discovered, letting you know a
        ///new version is ready to be installed.
        ///
        ///Do you want to enable this automatic update checks?.
        /// </summary>
        internal static string OnboardingUpdates_LblInfo1 {
            get {
                return ResourceManager.GetString("OnboardingUpdates_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à When a new update is available, HASS.Agent can download the installer and launch it for you.
        ///
        ///The certificate of the downloaded file will get checked before running,you will still get to review the release notes and manually approve the update..
        /// </summary>
        internal static string OnboardingUpdates_LblInfo2 {
            get {
                return ResourceManager.GetString("OnboardingUpdates_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Device &amp;Name.
        /// </summary>
        internal static string OnboardingWelcome_LblDeviceName {
            get {
                return ResourceManager.GetString("OnboardingWelcome_LblDeviceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Welcome to the HASS.Agent! It looks like this is the first time you are launching the agent.
        ///
        ///To assist you with a first time setup, proceed with the configuration steps below
        ///or alternatively, click &apos;Close&apos;..
        /// </summary>
        internal static string OnboardingWelcome_LblInfo1 {
            get {
                return ResourceManager.GetString("OnboardingWelcome_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The device name is used to identify your machine on Home Assistant, it is also used as a suggested prefix for your commands and sensors..
        /// </summary>
        internal static string OnboardingWelcome_LblInfo2 {
            get {
                return ResourceManager.GetString("OnboardingWelcome_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Interface &amp;Language.
        /// </summary>
        internal static string OnboardingWelcome_LblInterfaceLangauge {
            get {
                return ResourceManager.GetString("OnboardingWelcome_LblInterfaceLangauge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Your device name contained some characters that are not allowed by HA (only letters, digits and whitespace).
        ///
        ///The final name is: {0}
        ///
        ///Do you want to use that version?.
        /// </summary>
        internal static string OnboardingWelcome_Store_MessageBox1 {
            get {
                return ResourceManager.GetString("OnboardingWelcome_Store_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please wait a bit while the task is performed ...
        /// </summary>
        internal static string PortReservation_LblInfo1 {
            get {
                return ResourceManager.GetString("PortReservation_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Create API Port Binding.
        /// </summary>
        internal static string PortReservation_LblTask1 {
            get {
                return ResourceManager.GetString("PortReservation_LblTask1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Set Firewall Rule.
        /// </summary>
        internal static string PortReservation_LblTask2 {
            get {
                return ResourceManager.GetString("PortReservation_LblTask2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Not all steps completed succesfully. Please consult the logs for more information..
        /// </summary>
        internal static string PortReservation_ProcessPostUpdate_MessageBox1 {
            get {
                return ResourceManager.GetString("PortReservation_ProcessPostUpdate_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent Port Reservation.
        /// </summary>
        internal static string PortReservation_Title {
            get {
                return ResourceManager.GetString("PortReservation_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please wait a bit while some post-update tasks are performed ...
        /// </summary>
        internal static string PostUpdate_LblInfo1 {
            get {
                return ResourceManager.GetString("PostUpdate_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Configuring Satellite Service.
        /// </summary>
        internal static string PostUpdate_LblTask1 {
            get {
                return ResourceManager.GetString("PostUpdate_LblTask1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Create API Port Binding.
        /// </summary>
        internal static string PostUpdate_LblTask2 {
            get {
                return ResourceManager.GetString("PostUpdate_LblTask2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent Post Update.
        /// </summary>
        internal static string PostUpdate_PostUpdate {
            get {
                return ResourceManager.GetString("PostUpdate_PostUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Not all steps completed succesfully. Please consult the logs for more information..
        /// </summary>
        internal static string PostUpdate_ProcessPostUpdate_MessageBox1 {
            get {
                return ResourceManager.GetString("PostUpdate_ProcessPostUpdate_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent Post Update.
        /// </summary>
        internal static string PostUpdate_Title {
            get {
                return ResourceManager.GetString("PostUpdate_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unable to fetch your entities because of missing config, please enter the required values in the config screen..
        /// </summary>
        internal static string QuickActions_CheckHassManager_MessageBox1 {
            get {
                return ResourceManager.GetString("QuickActions_CheckHassManager_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Retrieving entities, please wait...
        /// </summary>
        internal static string QuickActions_LblLoading {
            get {
                return ResourceManager.GetString("QuickActions_LblLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à There was an error trying to fetch your entities!.
        /// </summary>
        internal static string QuickActions_MessageBox_EntityFailed {
            get {
                return ResourceManager.GetString("QuickActions_MessageBox_EntityFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Quick Actions.
        /// </summary>
        internal static string QuickActions_Title {
            get {
                return ResourceManager.GetString("QuickActions_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Add New.
        /// </summary>
        internal static string QuickActionsConfig_BtnAdd {
            get {
                return ResourceManager.GetString("QuickActionsConfig_BtnAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Modify.
        /// </summary>
        internal static string QuickActionsConfig_BtnModify {
            get {
                return ResourceManager.GetString("QuickActionsConfig_BtnModify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Preview.
        /// </summary>
        internal static string QuickActionsConfig_BtnPreview {
            get {
                return ResourceManager.GetString("QuickActionsConfig_BtnPreview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Remove.
        /// </summary>
        internal static string QuickActionsConfig_BtnRemove {
            get {
                return ResourceManager.GetString("QuickActionsConfig_BtnRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Store Quick Actions.
        /// </summary>
        internal static string QuickActionsConfig_BtnStore {
            get {
                return ResourceManager.GetString("QuickActionsConfig_BtnStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Action.
        /// </summary>
        internal static string QuickActionsConfig_ClmAction {
            get {
                return ResourceManager.GetString("QuickActionsConfig_ClmAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Description.
        /// </summary>
        internal static string QuickActionsConfig_ClmDescription {
            get {
                return ResourceManager.GetString("QuickActionsConfig_ClmDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Domain.
        /// </summary>
        internal static string QuickActionsConfig_ClmDomain {
            get {
                return ResourceManager.GetString("QuickActionsConfig_ClmDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Entity.
        /// </summary>
        internal static string QuickActionsConfig_ClmEntity {
            get {
                return ResourceManager.GetString("QuickActionsConfig_ClmEntity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Hotkey.
        /// </summary>
        internal static string QuickActionsConfig_ClmHotKey {
            get {
                return ResourceManager.GetString("QuickActionsConfig_ClmHotKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Hotkey Enabled.
        /// </summary>
        internal static string QuickActionsConfig_LblHotkey {
            get {
                return ResourceManager.GetString("QuickActionsConfig_LblHotkey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Quick Actions Configuration.
        /// </summary>
        internal static string QuickActionsConfig_Title {
            get {
                return ResourceManager.GetString("QuickActionsConfig_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Store Quick Action.
        /// </summary>
        internal static string QuickActionsMod_BtnStore {
            get {
                return ResourceManager.GetString("QuickActionsMod_BtnStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please select an entity!.
        /// </summary>
        internal static string QuickActionsMod_BtnStore_MessageBox1 {
            get {
                return ResourceManager.GetString("QuickActionsMod_BtnStore_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please select an domain!.
        /// </summary>
        internal static string QuickActionsMod_BtnStore_MessageBox2 {
            get {
                return ResourceManager.GetString("QuickActionsMod_BtnStore_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unknown action, please select a valid one..
        /// </summary>
        internal static string QuickActionsMod_BtnStore_MessageBox3 {
            get {
                return ResourceManager.GetString("QuickActionsMod_BtnStore_MessageBox3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à enable hotkey.
        /// </summary>
        internal static string QuickActionsMod_CbEnableHotkey {
            get {
                return ResourceManager.GetString("QuickActionsMod_CbEnableHotkey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unable to fetch your entities because of missing config, please enter the required values in the config screen..
        /// </summary>
        internal static string QuickActionsMod_CheckHassManager_MessageBox1 {
            get {
                return ResourceManager.GetString("QuickActionsMod_CheckHassManager_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à domain.
        /// </summary>
        internal static string QuickActionsMod_ClmDomain {
            get {
                return ResourceManager.GetString("QuickActionsMod_ClmDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Desired &amp;Action.
        /// </summary>
        internal static string QuickActionsMod_LblAction {
            get {
                return ResourceManager.GetString("QuickActionsMod_LblAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Description.
        /// </summary>
        internal static string QuickActionsMod_LblDescription {
            get {
                return ResourceManager.GetString("QuickActionsMod_LblDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Domain.
        /// </summary>
        internal static string QuickActionsMod_LblDomain {
            get {
                return ResourceManager.GetString("QuickActionsMod_LblDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Entity.
        /// </summary>
        internal static string QuickActionsMod_LblEntityInfo {
            get {
                return ResourceManager.GetString("QuickActionsMod_LblEntityInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;hotkey combination.
        /// </summary>
        internal static string QuickActionsMod_LblHotkey {
            get {
                return ResourceManager.GetString("QuickActionsMod_LblHotkey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Retrieving entities, please wait...
        /// </summary>
        internal static string QuickActionsMod_LblLoading {
            get {
                return ResourceManager.GetString("QuickActionsMod_LblLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à (optional, will be used instead of entity name).
        /// </summary>
        internal static string QuickActionsMod_LblTip1 {
            get {
                return ResourceManager.GetString("QuickActionsMod_LblTip1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à There was an error trying to fetch your entities..
        /// </summary>
        internal static string QuickActionsMod_MessageBox_Entities {
            get {
                return ResourceManager.GetString("QuickActionsMod_MessageBox_Entities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Quick Action.
        /// </summary>
        internal static string QuickActionsMod_Title {
            get {
                return ResourceManager.GetString("QuickActionsMod_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mod Quick Action.
        /// </summary>
        internal static string QuickActionsMod_Title_Mod {
            get {
                return ResourceManager.GetString("QuickActionsMod_Title_Mod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à New Quick Action.
        /// </summary>
        internal static string QuickActionsMod_Title_New {
            get {
                return ResourceManager.GetString("QuickActionsMod_Title_New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please wait while HASS.Agent restarts...
        /// </summary>
        internal static string Restart_LblInfo1 {
            get {
                return ResourceManager.GetString("Restart_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Waiting for previous instance to close...
        /// </summary>
        internal static string Restart_LblTask1 {
            get {
                return ResourceManager.GetString("Restart_LblTask1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Relaunch HASS.Agent.
        /// </summary>
        internal static string Restart_LblTask2 {
            get {
                return ResourceManager.GetString("Restart_LblTask2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent is still active after {0} seconds. Please close all instances and restart manually.
        ///
        ///Check the logs for more info, and optionally inform the developers..
        /// </summary>
        internal static string Restart_ProcessRestart_MessageBox1 {
            get {
                return ResourceManager.GetString("Restart_ProcessRestart_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent Restarter.
        /// </summary>
        internal static string Restart_Title {
            get {
                return ResourceManager.GetString("Restart_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Add New.
        /// </summary>
        internal static string SensorsConfig_BtnAdd {
            get {
                return ResourceManager.GetString("SensorsConfig_BtnAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Modify.
        /// </summary>
        internal static string SensorsConfig_BtnModify {
            get {
                return ResourceManager.GetString("SensorsConfig_BtnModify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Remove.
        /// </summary>
        internal static string SensorsConfig_BtnRemove {
            get {
                return ResourceManager.GetString("SensorsConfig_BtnRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Store &amp;&amp; Activate Sensors.
        /// </summary>
        internal static string SensorsConfig_BtnStore {
            get {
                return ResourceManager.GetString("SensorsConfig_BtnStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An error occurred whilst saving the sensors, please check the logs for more information..
        /// </summary>
        internal static string SensorsConfig_BtnStore_MessageBox1 {
            get {
                return ResourceManager.GetString("SensorsConfig_BtnStore_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Storing and registering, please wait...
        /// </summary>
        internal static string SensorsConfig_BtnStore_Storing {
            get {
                return ResourceManager.GetString("SensorsConfig_BtnStore_Storing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Name.
        /// </summary>
        internal static string SensorsConfig_ClmName {
            get {
                return ResourceManager.GetString("SensorsConfig_ClmName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Type.
        /// </summary>
        internal static string SensorsConfig_ClmType {
            get {
                return ResourceManager.GetString("SensorsConfig_ClmType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Last Known Value.
        /// </summary>
        internal static string SensorsConfig_ClmValue {
            get {
                return ResourceManager.GetString("SensorsConfig_ClmValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Refresh.
        /// </summary>
        internal static string SensorsConfig_LblRefresh {
            get {
                return ResourceManager.GetString("SensorsConfig_LblRefresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sensors Configuration.
        /// </summary>
        internal static string SensorsConfig_Title {
            get {
                return ResourceManager.GetString("SensorsConfig_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides the title of the current active window..
        /// </summary>
        internal static string SensorsManager_ActiveWindowSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_ActiveWindowSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides information various aspects of your device&apos;s audio:
        ///
        ///Current peak volume level (can be used as a simple &apos;is something playing&apos; value).
        ///
        ///Default audio device: name, state and volume.
        ///
        ///Summary of your audio sessions: application name, muted state, volume and current peak volume..
        /// </summary>
        internal static string SensorsManager_AudioSensorsDescription {
            get {
                return ResourceManager.GetString("SensorsManager_AudioSensorsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides a sensor with the current charging status, estimated amount of minutes on a full charge, remaining charge as a percentage, remaining charge in minutes and the powerline status..
        /// </summary>
        internal static string SensorsManager_BatterySensorsDescription {
            get {
                return ResourceManager.GetString("SensorsManager_BatterySensorsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides a sensor with the amount of bluetooth devices found.
        ///
        ///The devices and their connected state are added as attributes..
        /// </summary>
        internal static string SensorsManager_BluetoothDevicesSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_BluetoothDevicesSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides a sensors with the amount of bluetooth LE devices found.
        ///
        ///The devices and their connected state are added as attributes.
        ///
        ///Only shows devices that were seen since the last report, ie. when the sensor publishes, the list clears..
        /// </summary>
        internal static string SensorsManager_BluetoothLeDevicesSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_BluetoothLeDevicesSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides the current load of the first CPU as a percentage..
        /// </summary>
        internal static string SensorsManager_CpuLoadSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_CpuLoadSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides the current clockspeed of the first CPU..
        /// </summary>
        internal static string SensorsManager_CurrentClockSpeedSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_CurrentClockSpeedSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides the current volume level as a percentage.
        ///
        ///Currently takes the volume of your default device..
        /// </summary>
        internal static string SensorsManager_CurrentVolumeSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_CurrentVolumeSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides a sensor with the amount of displays, name of the primary display, and per display its name, resolution and bits per pixel..
        /// </summary>
        internal static string SensorsManager_DisplaySensorsDescription {
            get {
                return ResourceManager.GetString("SensorsManager_DisplaySensorsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Dummy sensor for testing purposes, sends a random integer value between 0 and 100..
        /// </summary>
        internal static string SensorsManager_DummySensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_DummySensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Returns your current latitude, longitude and altitude as a comma-seperated value.
        ///
        ///Make sure Windows&apos; location services are enabled!
        ///
        ///Depending on your Windows version, this can be found in the new control panel -&gt; &apos;privacy and security&apos; -&gt; &apos;location&apos;..
        /// </summary>
        internal static string SensorsManager_GeoLocationSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_GeoLocationSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides the current load of the first GPU as a percentage..
        /// </summary>
        internal static string SensorsManager_GpuLoadSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_GpuLoadSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides the current temperature of the first GPU..
        /// </summary>
        internal static string SensorsManager_GpuTemperatureSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_GpuTemperatureSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides a datetime value containing the last moment the user provided any input..
        /// </summary>
        internal static string SensorsManager_LastActiveSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_LastActiveSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides a datetime value containing the last moment the system (re)booted.
        ///
        ///Important: Windows&apos; FastBoot option can throw this value off, because that&apos;s a form of hibernation. You can disable it through Power Options -&gt; &apos;Choose what the power buttons do&apos; -&gt; uncheck &apos;Turn on fast start-up&apos;. It doesn&apos;t make much difference for modern machines with SSDs, but disabling makes sure you get a clean state after rebooting..
        /// </summary>
        internal static string SensorsManager_LastBootSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_LastBootSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides the last system state change:
        ///
        ///ApplicationStarted, Logoff, SystemShutdown, Resume, Suspend, ConsoleConnect, ConsoleDisconnect, RemoteConnect, RemoteDisconnect, SessionLock, SessionLogoff, SessionLogon, SessionRemoteControl and SessionUnlock..
        /// </summary>
        internal static string SensorsManager_LastSystemStateChangeSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_LastSystemStateChangeSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Returns the name of the currently logged user.
        ///
        ///This will only show active users, and falls back to &apos;Empty&apos; if there are none. If there are multiple, the first will be used..
        /// </summary>
        internal static string SensorsManager_LoggedUserSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_LoggedUserSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Returns a json-formatted list of currently logged users.
        ///
        ///This will also contain users that aren&apos;t active. If you only want the current active user, use the LoggedUser sensor instead..
        /// </summary>
        internal static string SensorsManager_LoggedUsersSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_LoggedUsersSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides the amount of used memory as a percentage..
        /// </summary>
        internal static string SensorsManager_MemoryUsageSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_MemoryUsageSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides a bool value based on whether the microphone is currently being used.
        ///
        ///Note: if used in the satellite service, it won&apos;t detect userspace applications..
        /// </summary>
        internal static string SensorsManager_MicrophoneActiveSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_MicrophoneActiveSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides the name of the process that&apos;s currently using the microphone.
        ///
        ///Note: if used in the satellite service, it won&apos;t detect userspace applications..
        /// </summary>
        internal static string SensorsManager_MicrophoneProcessSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_MicrophoneProcessSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides the last monitor power state change:
        ///
        ///Dimmed, PowerOff, PowerOn and Unkown..
        /// </summary>
        internal static string SensorsManager_MonitorPowerStateSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_MonitorPowerStateSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides an ON/OFF value based on whether the window is currently open (doesn&apos;t have to be active)..
        /// </summary>
        internal static string SensorsManager_NamedWindowSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_NamedWindowSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides card info, configuration, transfer- &amp; package statistics and addresses (ip, mac, dhcp, dns) of the selected network card(s).
        ///
        ///This is a multi-value sensor..
        /// </summary>
        internal static string SensorsManager_NetworkSensorsDescription {
            get {
                return ResourceManager.GetString("SensorsManager_NetworkSensorsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides the values of a performance counter.
        ///
        ///For example, the built-in CPU load sensor uses these values:
        ///
        ///Category: Processor
        ///Counter: % Processor Time
        ///Instance: _Total
        ///
        ///You can explore the counters through Windows&apos; &apos;perfmon.exe&apos; tool..
        /// </summary>
        internal static string SensorsManager_PerformanceCounterSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_PerformanceCounterSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Returns the result of the provided Powershell command or script.
        ///
        ///Converts the outcome to text..
        /// </summary>
        internal static string SensorsManager_PowershellSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_PowershellSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides information about all installed printers and their queues..
        /// </summary>
        internal static string SensorsManager_PrintersSensorsDescription {
            get {
                return ResourceManager.GetString("SensorsManager_PrintersSensorsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides the number of active instances of the process.
        ///
        ///Note: don&apos;t add the extension (eg. notepad.exe becomes notepad)..
        /// </summary>
        internal static string SensorsManager_ProcessActiveSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_ProcessActiveSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Returns the state of the provided service: NotFound, Stopped, StartPending, StopPending, Running, ContinuePending, PausePending or Paused.
        ///
        ///Make sure to provide the &apos;Service name&apos;, not the &apos;Display name&apos;..
        /// </summary>
        internal static string SensorsManager_ServiceStateSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_ServiceStateSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides the current session state:
        ///
        ///Locked, Unlocked or Unknown.
        ///
        ///Use a LastSystemStateChangeSensor to monitor session state changes..
        /// </summary>
        internal static string SensorsManager_SessionStateSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_SessionStateSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides the labels, total size (MB), available space (MB), used space (MB) and file system of all present non-removable disks..
        /// </summary>
        internal static string SensorsManager_StorageSensorsDescription {
            get {
                return ResourceManager.GetString("SensorsManager_StorageSensorsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides the current user state:
        ///
        ///NotPresent, Busy, RunningDirect3dFullScreen, PresentationMode, AcceptsNotifications, QuietTime or RunningWindowsStoreApp.
        ///
        ///Can for instance be used to determine whether to send notifications or TTS messages..
        /// </summary>
        internal static string SensorsManager_UserNotificationStateSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_UserNotificationStateSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides a bool value based on whether the webcam is currently being used.
        ///
        ///Note: if used in the satellite service, it won&apos;t detect userspace applications..
        /// </summary>
        internal static string SensorsManager_WebcamActiveSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_WebcamActiveSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides the name of the process that&apos;s currently using the webcam.
        ///
        ///Note: if used in the satellite service, it won&apos;t detect userspace applications..
        /// </summary>
        internal static string SensorsManager_WebcamProcessSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_WebcamProcessSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides the current state of the process&apos; window:
        ///
        ///Hidden, Maximized, Minimized, Normal and Unknown..
        /// </summary>
        internal static string SensorsManager_WindowStateSensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_WindowStateSensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides a sensor with the amount of pending driver updates, a sensor with the amount of pending software updates, a sensor containing all pending driver updates information (title, kb article id&apos;s, hidden, type and categories) and a sensor containing the same for pending software updates.
        ///
        ///This is a costly request, so the recommended interval is 15 minutes (900 seconds). But it&apos;s capped at 10 minutes, if you provide a lower value, you&apos;ll get the last known list..
        /// </summary>
        internal static string SensorsManager_WindowsUpdatesSensorsDescription {
            get {
                return ResourceManager.GetString("SensorsManager_WindowsUpdatesSensorsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides the result of the WMI query..
        /// </summary>
        internal static string SensorsManager_WmiQuerySensorDescription {
            get {
                return ResourceManager.GetString("SensorsManager_WmiQuerySensorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à All.
        /// </summary>
        internal static string SensorsMod_All {
            get {
                return ResourceManager.GetString("SensorsMod_All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Store Sensor.
        /// </summary>
        internal static string SensorsMod_BtnStore {
            get {
                return ResourceManager.GetString("SensorsMod_BtnStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please select a sensor type!.
        /// </summary>
        internal static string SensorsMod_BtnStore_MessageBox1 {
            get {
                return ResourceManager.GetString("SensorsMod_BtnStore_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please enter the name of a process!.
        /// </summary>
        internal static string SensorsMod_BtnStore_MessageBox10 {
            get {
                return ResourceManager.GetString("SensorsMod_BtnStore_MessageBox10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please enter the name of a service!.
        /// </summary>
        internal static string SensorsMod_BtnStore_MessageBox11 {
            get {
                return ResourceManager.GetString("SensorsMod_BtnStore_MessageBox11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please provide a number between 0 and 20!.
        /// </summary>
        internal static string SensorsMod_BtnStore_MessageBox12 {
            get {
                return ResourceManager.GetString("SensorsMod_BtnStore_MessageBox12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please select a valid sensor type!.
        /// </summary>
        internal static string SensorsMod_BtnStore_MessageBox2 {
            get {
                return ResourceManager.GetString("SensorsMod_BtnStore_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please provide a name!.
        /// </summary>
        internal static string SensorsMod_BtnStore_MessageBox3 {
            get {
                return ResourceManager.GetString("SensorsMod_BtnStore_MessageBox3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A single-value sensor already exists with that name, are you sure you want to proceed?.
        /// </summary>
        internal static string SensorsMod_BtnStore_MessageBox4 {
            get {
                return ResourceManager.GetString("SensorsMod_BtnStore_MessageBox4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A multi-value sensor already exists with that name, are you sure you want to proceed?.
        /// </summary>
        internal static string SensorsMod_BtnStore_MessageBox5 {
            get {
                return ResourceManager.GetString("SensorsMod_BtnStore_MessageBox5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please provide an interval between 1 and 43200 (12 hours)!.
        /// </summary>
        internal static string SensorsMod_BtnStore_MessageBox6 {
            get {
                return ResourceManager.GetString("SensorsMod_BtnStore_MessageBox6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please enter a window name!.
        /// </summary>
        internal static string SensorsMod_BtnStore_MessageBox7 {
            get {
                return ResourceManager.GetString("SensorsMod_BtnStore_MessageBox7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please enter a query!.
        /// </summary>
        internal static string SensorsMod_BtnStore_MessageBox8 {
            get {
                return ResourceManager.GetString("SensorsMod_BtnStore_MessageBox8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please enter a category and instance!.
        /// </summary>
        internal static string SensorsMod_BtnStore_MessageBox9 {
            get {
                return ResourceManager.GetString("SensorsMod_BtnStore_MessageBox9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Test.
        /// </summary>
        internal static string SensorsMod_BtnTest {
            get {
                return ResourceManager.GetString("SensorsMod_BtnTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Test Performance Counter.
        /// </summary>
        internal static string SensorsMod_BtnTest_PerformanceCounter {
            get {
                return ResourceManager.GetString("SensorsMod_BtnTest_PerformanceCounter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Test WMI Query.
        /// </summary>
        internal static string SensorsMod_BtnTest_Wmi {
            get {
                return ResourceManager.GetString("SensorsMod_BtnTest_Wmi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Round.
        /// </summary>
        internal static string SensorsMod_ChkRound {
            get {
                return ResourceManager.GetString("SensorsMod_ChkRound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à   Type.
        /// </summary>
        internal static string SensorsMod_ClmSensorName {
            get {
                return ResourceManager.GetString("SensorsMod_ClmSensorName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Agent.
        /// </summary>
        internal static string SensorsMod_LblAgent {
            get {
                return ResourceManager.GetString("SensorsMod_LblAgent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Description.
        /// </summary>
        internal static string SensorsMod_LblDescription {
            get {
                return ResourceManager.GetString("SensorsMod_LblDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Multivalue.
        /// </summary>
        internal static string SensorsMod_LblMultiValue {
            get {
                return ResourceManager.GetString("SensorsMod_LblMultiValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Name.
        /// </summary>
        internal static string SensorsMod_LblName {
            get {
                return ResourceManager.GetString("SensorsMod_LblName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à digit after the comma.
        /// </summary>
        internal static string SensorsMod_LblRound {
            get {
                return ResourceManager.GetString("SensorsMod_LblRound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à seconds.
        /// </summary>
        internal static string SensorsMod_LblSeconds {
            get {
                return ResourceManager.GetString("SensorsMod_LblSeconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Service.
        /// </summary>
        internal static string SensorsMod_LblService {
            get {
                return ResourceManager.GetString("SensorsMod_LblService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à setting 1.
        /// </summary>
        internal static string SensorsMod_LblSetting1 {
            get {
                return ResourceManager.GetString("SensorsMod_LblSetting1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Category.
        /// </summary>
        internal static string SensorsMod_LblSetting1_Category {
            get {
                return ResourceManager.GetString("SensorsMod_LblSetting1_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Network Card.
        /// </summary>
        internal static string SensorsMod_LblSetting1_Network {
            get {
                return ResourceManager.GetString("SensorsMod_LblSetting1_Network", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à powershell command or script.
        /// </summary>
        internal static string SensorsMod_LblSetting1_Powershell {
            get {
                return ResourceManager.GetString("SensorsMod_LblSetting1_Powershell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Process.
        /// </summary>
        internal static string SensorsMod_LblSetting1_Process {
            get {
                return ResourceManager.GetString("SensorsMod_LblSetting1_Process", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Service.
        /// </summary>
        internal static string SensorsMod_LblSetting1_Service {
            get {
                return ResourceManager.GetString("SensorsMod_LblSetting1_Service", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Window Name.
        /// </summary>
        internal static string SensorsMod_LblSetting1_WindowName {
            get {
                return ResourceManager.GetString("SensorsMod_LblSetting1_WindowName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à WMI Query.
        /// </summary>
        internal static string SensorsMod_LblSetting1_Wmi {
            get {
                return ResourceManager.GetString("SensorsMod_LblSetting1_Wmi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Setting 2.
        /// </summary>
        internal static string SensorsMod_LblSetting2 {
            get {
                return ResourceManager.GetString("SensorsMod_LblSetting2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Counter.
        /// </summary>
        internal static string SensorsMod_LblSetting2_Counter {
            get {
                return ResourceManager.GetString("SensorsMod_LblSetting2_Counter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à WMI Scope (optional).
        /// </summary>
        internal static string SensorsMod_LblSetting2_Wmi {
            get {
                return ResourceManager.GetString("SensorsMod_LblSetting2_Wmi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Setting 3.
        /// </summary>
        internal static string SensorsMod_LblSetting3 {
            get {
                return ResourceManager.GetString("SensorsMod_LblSetting3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Instance (optional).
        /// </summary>
        internal static string SensorsMod_LblSetting3_Instance {
            get {
                return ResourceManager.GetString("SensorsMod_LblSetting3_Instance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent only!.
        /// </summary>
        internal static string SensorsMod_LblSpecificClient {
            get {
                return ResourceManager.GetString("SensorsMod_LblSpecificClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selected Type.
        /// </summary>
        internal static string SensorsMod_LblType {
            get {
                return ResourceManager.GetString("SensorsMod_LblType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Update every.
        /// </summary>
        internal static string SensorsMod_LblUpdate {
            get {
                return ResourceManager.GetString("SensorsMod_LblUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The name you provided contains unsupported characters and won&apos;t work. The suggested version is:
        ///
        ///{0}
        ///
        ///Do you want to use this version?.
        /// </summary>
        internal static string SensorsMod_MessageBox_Sanitize {
            get {
                return ResourceManager.GetString("SensorsMod_MessageBox_Sanitize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Test Command/Script.
        /// </summary>
        internal static string SensorsMod_SensorsMod_BtnTest_Powershell {
            get {
                return ResourceManager.GetString("SensorsMod_SensorsMod_BtnTest_Powershell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {0} only!.
        /// </summary>
        internal static string SensorsMod_SpecificClient {
            get {
                return ResourceManager.GetString("SensorsMod_SpecificClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enter a category and counter first..
        /// </summary>
        internal static string SensorsMod_TestPerformanceCounter_MessageBox1 {
            get {
                return ResourceManager.GetString("SensorsMod_TestPerformanceCounter_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Test succesfully executed, result value:
        ///
        ///{0}.
        /// </summary>
        internal static string SensorsMod_TestPerformanceCounter_MessageBox2 {
            get {
                return ResourceManager.GetString("SensorsMod_TestPerformanceCounter_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The test failed to execute:
        ///
        ///{0}
        ///
        ///Do you want to open the logs folder?.
        /// </summary>
        internal static string SensorsMod_TestPerformanceCounter_MessageBox3 {
            get {
                return ResourceManager.GetString("SensorsMod_TestPerformanceCounter_MessageBox3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please enter a command or script!.
        /// </summary>
        internal static string SensorsMod_TestPowershell_MessageBox1 {
            get {
                return ResourceManager.GetString("SensorsMod_TestPowershell_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Test succesfully executed, result value:
        ///
        ///{0}.
        /// </summary>
        internal static string SensorsMod_TestPowershell_MessageBox2 {
            get {
                return ResourceManager.GetString("SensorsMod_TestPowershell_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The test failed to execute:
        ///
        ///{0}
        ///
        ///Do you want to open the logs folder?.
        /// </summary>
        internal static string SensorsMod_TestPowershell_MessageBox3 {
            get {
                return ResourceManager.GetString("SensorsMod_TestPowershell_MessageBox3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enter a WMI query first..
        /// </summary>
        internal static string SensorsMod_TestWmi_MessageBox1 {
            get {
                return ResourceManager.GetString("SensorsMod_TestWmi_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Query succesfully executed, result value:
        ///
        ///{0}.
        /// </summary>
        internal static string SensorsMod_TestWmi_MessageBox2 {
            get {
                return ResourceManager.GetString("SensorsMod_TestWmi_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The query failed to execute:
        ///
        ///{0}
        ///
        ///Do you want to open the logs folder?.
        /// </summary>
        internal static string SensorsMod_TestWmi_MessageBox3 {
            get {
                return ResourceManager.GetString("SensorsMod_TestWmi_MessageBox3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sensor.
        /// </summary>
        internal static string SensorsMod_Title {
            get {
                return ResourceManager.GetString("SensorsMod_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mod Sensor.
        /// </summary>
        internal static string SensorsMod_Title_Mod {
            get {
                return ResourceManager.GetString("SensorsMod_Title_Mod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à New Sensor.
        /// </summary>
        internal static string SensorsMod_Title_New {
            get {
                return ResourceManager.GetString("SensorsMod_Title_New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à It looks like your scope is malformed, it should probably start like this:
        ///
        ///\\.\ROOT\
        ///
        ///The scope you entered:
        ///
        ///{0}
        ///
        ///Tip: make sure you haven&apos;t switched the scope and query fields around.
        ///
        ///Do you still want to use the current values?.
        /// </summary>
        internal static string SensorsMod_WmiTestFailed {
            get {
                return ResourceManager.GetString("SensorsMod_WmiTestFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ActiveWindow.
        /// </summary>
        internal static string SensorType_ActiveWindowSensor {
            get {
                return ResourceManager.GetString("SensorType_ActiveWindowSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Audio.
        /// </summary>
        internal static string SensorType_AudioSensors {
            get {
                return ResourceManager.GetString("SensorType_AudioSensors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Battery.
        /// </summary>
        internal static string SensorType_BatterySensors {
            get {
                return ResourceManager.GetString("SensorType_BatterySensors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à BluetoothDevices.
        /// </summary>
        internal static string SensorType_BluetoothDevicesSensor {
            get {
                return ResourceManager.GetString("SensorType_BluetoothDevicesSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à BluetoothLeDevices.
        /// </summary>
        internal static string SensorType_BluetoothLeDevicesSensor {
            get {
                return ResourceManager.GetString("SensorType_BluetoothLeDevicesSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à CpuLoad.
        /// </summary>
        internal static string SensorType_CpuLoadSensor {
            get {
                return ResourceManager.GetString("SensorType_CpuLoadSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à CurrentClockSpeed.
        /// </summary>
        internal static string SensorType_CurrentClockSpeedSensor {
            get {
                return ResourceManager.GetString("SensorType_CurrentClockSpeedSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à CurrentVolume.
        /// </summary>
        internal static string SensorType_CurrentVolumeSensor {
            get {
                return ResourceManager.GetString("SensorType_CurrentVolumeSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Display.
        /// </summary>
        internal static string SensorType_DisplaySensors {
            get {
                return ResourceManager.GetString("SensorType_DisplaySensors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Dummy.
        /// </summary>
        internal static string SensorType_DummySensor {
            get {
                return ResourceManager.GetString("SensorType_DummySensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à GeoLocation.
        /// </summary>
        internal static string SensorType_GeoLocationSensor {
            get {
                return ResourceManager.GetString("SensorType_GeoLocationSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à GpuLoad.
        /// </summary>
        internal static string SensorType_GpuLoadSensor {
            get {
                return ResourceManager.GetString("SensorType_GpuLoadSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à GpuTemperature.
        /// </summary>
        internal static string SensorType_GpuTemperatureSensor {
            get {
                return ResourceManager.GetString("SensorType_GpuTemperatureSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à LastActive.
        /// </summary>
        internal static string SensorType_LastActiveSensor {
            get {
                return ResourceManager.GetString("SensorType_LastActiveSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à LastBoot.
        /// </summary>
        internal static string SensorType_LastBootSensor {
            get {
                return ResourceManager.GetString("SensorType_LastBootSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à LastSystemStateChange.
        /// </summary>
        internal static string SensorType_LastSystemStateChangeSensor {
            get {
                return ResourceManager.GetString("SensorType_LastSystemStateChangeSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à LoggedUser.
        /// </summary>
        internal static string SensorType_LoggedUserSensor {
            get {
                return ResourceManager.GetString("SensorType_LoggedUserSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à LoggedUsers.
        /// </summary>
        internal static string SensorType_LoggedUsersSensor {
            get {
                return ResourceManager.GetString("SensorType_LoggedUsersSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MemoryUsage.
        /// </summary>
        internal static string SensorType_MemoryUsageSensor {
            get {
                return ResourceManager.GetString("SensorType_MemoryUsageSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MicrophoneActive.
        /// </summary>
        internal static string SensorType_MicrophoneActiveSensor {
            get {
                return ResourceManager.GetString("SensorType_MicrophoneActiveSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MicrophoneProcess.
        /// </summary>
        internal static string SensorType_MicrophoneProcessSensor {
            get {
                return ResourceManager.GetString("SensorType_MicrophoneProcessSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MonitorPowerState.
        /// </summary>
        internal static string SensorType_MonitorPowerStateSensor {
            get {
                return ResourceManager.GetString("SensorType_MonitorPowerStateSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à NamedWindow.
        /// </summary>
        internal static string SensorType_NamedWindowSensor {
            get {
                return ResourceManager.GetString("SensorType_NamedWindowSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Network.
        /// </summary>
        internal static string SensorType_NetworkSensors {
            get {
                return ResourceManager.GetString("SensorType_NetworkSensors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à PerformanceCounter.
        /// </summary>
        internal static string SensorType_PerformanceCounterSensor {
            get {
                return ResourceManager.GetString("SensorType_PerformanceCounterSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à PowershellSensor.
        /// </summary>
        internal static string SensorType_PowershellSensor {
            get {
                return ResourceManager.GetString("SensorType_PowershellSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Printers.
        /// </summary>
        internal static string SensorType_PrintersSensors {
            get {
                return ResourceManager.GetString("SensorType_PrintersSensors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ProcessActive.
        /// </summary>
        internal static string SensorType_ProcessActiveSensor {
            get {
                return ResourceManager.GetString("SensorType_ProcessActiveSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ServiceState.
        /// </summary>
        internal static string SensorType_ServiceStateSensor {
            get {
                return ResourceManager.GetString("SensorType_ServiceStateSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SessionState.
        /// </summary>
        internal static string SensorType_SessionStateSensor {
            get {
                return ResourceManager.GetString("SensorType_SessionStateSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Storage.
        /// </summary>
        internal static string SensorType_StorageSensors {
            get {
                return ResourceManager.GetString("SensorType_StorageSensors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à UserNotification.
        /// </summary>
        internal static string SensorType_UserNotificationStateSensor {
            get {
                return ResourceManager.GetString("SensorType_UserNotificationStateSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à WebcamActive.
        /// </summary>
        internal static string SensorType_WebcamActiveSensor {
            get {
                return ResourceManager.GetString("SensorType_WebcamActiveSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à WebcamProcess.
        /// </summary>
        internal static string SensorType_WebcamProcessSensor {
            get {
                return ResourceManager.GetString("SensorType_WebcamProcessSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à WindowState.
        /// </summary>
        internal static string SensorType_WindowStateSensor {
            get {
                return ResourceManager.GetString("SensorType_WindowStateSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à WindowsUpdates.
        /// </summary>
        internal static string SensorType_WindowsUpdatesSensors {
            get {
                return ResourceManager.GetString("SensorType_WindowsUpdatesSensors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à WmiQuery.
        /// </summary>
        internal static string SensorType_WmiQuerySensor {
            get {
                return ResourceManager.GetString("SensorType_WmiQuerySensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Add New.
        /// </summary>
        internal static string ServiceCommands_BtnAdd {
            get {
                return ResourceManager.GetString("ServiceCommands_BtnAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Modify.
        /// </summary>
        internal static string ServiceCommands_BtnModify {
            get {
                return ResourceManager.GetString("ServiceCommands_BtnModify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Remove.
        /// </summary>
        internal static string ServiceCommands_BtnRemove {
            get {
                return ResourceManager.GetString("ServiceCommands_BtnRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Send &amp;&amp; Activate Commands.
        /// </summary>
        internal static string ServiceCommands_BtnStore {
            get {
                return ResourceManager.GetString("ServiceCommands_BtnStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An error occurred whilst saving your commands, please check the logs for more information..
        /// </summary>
        internal static string ServiceCommands_BtnStore_MessageBox1 {
            get {
                return ResourceManager.GetString("ServiceCommands_BtnStore_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Storing and registering, please wait...
        /// </summary>
        internal static string ServiceCommands_BtnStore_Storing {
            get {
                return ResourceManager.GetString("ServiceCommands_BtnStore_Storing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Name.
        /// </summary>
        internal static string ServiceCommands_ClmName {
            get {
                return ResourceManager.GetString("ServiceCommands_ClmName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Type.
        /// </summary>
        internal static string ServiceCommands_ClmType {
            get {
                return ResourceManager.GetString("ServiceCommands_ClmType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Low Integrity.
        /// </summary>
        internal static string ServiceCommands_LblLowIntegrity {
            get {
                return ResourceManager.GetString("ServiceCommands_LblLowIntegrity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à commands stored!.
        /// </summary>
        internal static string ServiceCommands_LblStored {
            get {
                return ResourceManager.GetString("ServiceCommands_LblStored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à      Commands     .
        /// </summary>
        internal static string ServiceConfig_TabCommands {
            get {
                return ResourceManager.GetString("ServiceConfig_TabCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à      General     .
        /// </summary>
        internal static string ServiceConfig_TabGeneral {
            get {
                return ResourceManager.GetString("ServiceConfig_TabGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à      MQTT     .
        /// </summary>
        internal static string ServiceConfig_TabMqtt {
            get {
                return ResourceManager.GetString("ServiceConfig_TabMqtt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à      Sensors     .
        /// </summary>
        internal static string ServiceConfig_TabSensors {
            get {
                return ResourceManager.GetString("ServiceConfig_TabSensors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Satellite Service Configuration.
        /// </summary>
        internal static string ServiceConfig_Title {
            get {
                return ResourceManager.GetString("ServiceConfig_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Apply.
        /// </summary>
        internal static string ServiceConnect_BtnRetryAuthId {
            get {
                return ResourceManager.GetString("ServiceConnect_BtnRetryAuthId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Fetching configured commands failed!.
        /// </summary>
        internal static string ServiceConnect_CommandsFailed {
            get {
                return ResourceManager.GetString("ServiceConnect_CommandsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The service returned an error while requesting its configured commands. Check the logs for more info.
        ///
        ///You can open the logs and manage the service from the configuration panel..
        /// </summary>
        internal static string ServiceConnect_CommandsFailedMessage {
            get {
                return ResourceManager.GetString("ServiceConnect_CommandsFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Communicating with the service has failed!.
        /// </summary>
        internal static string ServiceConnect_CommunicationFailed {
            get {
                return ResourceManager.GetString("ServiceConnect_CommunicationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unable to communicate with the service. Check the logs for more info.
        ///
        ///You can open the logs and manage the service from the configuration panel..
        /// </summary>
        internal static string ServiceConnect_CommunicationFailedMessage {
            get {
                return ResourceManager.GetString("ServiceConnect_CommunicationFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Connecting with satellite service, please wait...
        /// </summary>
        internal static string ServiceConnect_Connecting {
            get {
                return ResourceManager.GetString("ServiceConnect_Connecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Connecting to the service has failed!.
        /// </summary>
        internal static string ServiceConnect_Failed {
            get {
                return ResourceManager.GetString("ServiceConnect_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The service hasn&apos;t been found! You can install and manage it from the configuration panel.
        ///
        ///When it&apos;s up and running, come back here to configure the commands and sensors..
        /// </summary>
        internal static string ServiceConnect_FailedMessage {
            get {
                return ResourceManager.GetString("ServiceConnect_FailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Authenticate.
        /// </summary>
        internal static string ServiceConnect_LblAuthenticate {
            get {
                return ResourceManager.GetString("ServiceConnect_LblAuthenticate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Connect with service.
        /// </summary>
        internal static string ServiceConnect_LblConnect {
            get {
                return ResourceManager.GetString("ServiceConnect_LblConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Fetch Configuration.
        /// </summary>
        internal static string ServiceConnect_LblFetchConfig {
            get {
                return ResourceManager.GetString("ServiceConnect_LblFetchConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Connecting satellite service, please wait...
        /// </summary>
        internal static string ServiceConnect_LblLoading {
            get {
                return ResourceManager.GetString("ServiceConnect_LblLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Auth &amp;ID.
        /// </summary>
        internal static string ServiceConnect_LblRetryAuthId {
            get {
                return ResourceManager.GetString("ServiceConnect_LblRetryAuthId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Fetching MQTT settings failed!.
        /// </summary>
        internal static string ServiceConnect_MqttFailed {
            get {
                return ResourceManager.GetString("ServiceConnect_MqttFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The service returned an error while requesting its MQTT settings. Check the logs for more info.
        ///
        ///You can open the logs and manage the service from the configuration panel..
        /// </summary>
        internal static string ServiceConnect_MqttFailedMessage {
            get {
                return ResourceManager.GetString("ServiceConnect_MqttFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Fetching configured sensors failed!.
        /// </summary>
        internal static string ServiceConnect_SensorsFailed {
            get {
                return ResourceManager.GetString("ServiceConnect_SensorsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The service returned an error while requesting its configured sensors. Check the logs for more info.
        ///
        ///You can open the logs and manage the service from the configuration panel..
        /// </summary>
        internal static string ServiceConnect_SensorsFailedMessage {
            get {
                return ResourceManager.GetString("ServiceConnect_SensorsFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Fetching settings failed!.
        /// </summary>
        internal static string ServiceConnect_SettingsFailed {
            get {
                return ResourceManager.GetString("ServiceConnect_SettingsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The service returned an error while requesting its settings. Check the logs for more info.
        ///
        ///You can open the logs and manage the service from the configuration panel..
        /// </summary>
        internal static string ServiceConnect_SettingsFailedMessage {
            get {
                return ResourceManager.GetString("ServiceConnect_SettingsFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unauthorized.
        /// </summary>
        internal static string ServiceConnect_Unauthorized {
            get {
                return ResourceManager.GetString("ServiceConnect_Unauthorized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You are not authorized to contact the service.
        ///
        ///If you have the correct auth ID, you can set it now and try again..
        /// </summary>
        internal static string ServiceConnect_UnauthorizedMessage {
            get {
                return ResourceManager.GetString("ServiceConnect_UnauthorizedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Fatal error, please check logs for information!.
        /// </summary>
        internal static string ServiceControllerManager_Error_Fatal {
            get {
                return ResourceManager.GetString("ServiceControllerManager_Error_Fatal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Timeout expired.
        /// </summary>
        internal static string ServiceControllerManager_Error_Timeout {
            get {
                return ResourceManager.GetString("ServiceControllerManager_Error_Timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à unknown reason.
        /// </summary>
        internal static string ServiceControllerManager_Error_Unknown {
            get {
                return ResourceManager.GetString("ServiceControllerManager_Error_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Apply.
        /// </summary>
        internal static string ServiceGeneral_Apply {
            get {
                return ResourceManager.GetString("ServiceGeneral_Apply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please select an executor first. (Tip: Double click to Browse).
        /// </summary>
        internal static string ServiceGeneral_BtnStoreCustomExecutor_MessageBox1 {
            get {
                return ResourceManager.GetString("ServiceGeneral_BtnStoreCustomExecutor_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The selected executor could not be found, please ensure the path provided is correct and try again..
        /// </summary>
        internal static string ServiceGeneral_BtnStoreCustomExecutor_MessageBox2 {
            get {
                return ResourceManager.GetString("ServiceGeneral_BtnStoreCustomExecutor_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please provide a device name!.
        /// </summary>
        internal static string ServiceGeneral_BtnStoreDeviceName_MessageBox1 {
            get {
                return ResourceManager.GetString("ServiceGeneral_BtnStoreDeviceName_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Auth &amp;ID.
        /// </summary>
        internal static string ServiceGeneral_LblAuthId {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblAuthId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Set an auth ID if you don&apos;t want every instance of HASS.Agent on this PC to connect with the satellite service.
        ///
        ///Only the instances that have the correct ID, can connect.
        ///
        ///Leave empty to allow all to connect..
        /// </summary>
        internal static string ServiceGeneral_LblAuthIdInfo_MessageBox1 {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblAuthIdInfo_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à stored!.
        /// </summary>
        internal static string ServiceGeneral_LblAuthStored {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblAuthStored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Custom Executor &amp;Binary.
        /// </summary>
        internal static string ServiceGeneral_LblCustomExecBinary {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblCustomExecBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Custom &amp;Executor Name.
        /// </summary>
        internal static string ServiceGeneral_LblCustomExecName {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblCustomExecName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Device &amp;Name.
        /// </summary>
        internal static string ServiceGeneral_LblDeviceName {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblDeviceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This is the name with which the satellite service registers itself on Home Assistant.
        ///
        ///By default, it&apos;s your PC&apos;s name plus &apos;-satellite&apos;..
        /// </summary>
        internal static string ServiceGeneral_LblDeviceNameInfo_MessageBox1 {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblDeviceNameInfo_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disconnected Grace &amp;Period.
        /// </summary>
        internal static string ServiceGeneral_LblDisconGrace {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblDisconGrace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The amount of time the satellite service will wait before reporting a lost connection to the MQTT broker..
        /// </summary>
        internal static string ServiceGeneral_LblDisconGraceInfo_MessageBox1 {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblDisconGraceInfo_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This page contains general configuration settings, for MQTT settings, commands, and sensors, browse the different tabs above..
        /// </summary>
        internal static string ServiceGeneral_LblInfo1 {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You can use the satellite service to run sensors and commands without having to be logged in. Not all types are available, for instance the &apos;LaunchUrl&apos; command can only be added as a regular command..
        /// </summary>
        internal static string ServiceGeneral_LblInfo2 {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à seconds.
        /// </summary>
        internal static string ServiceGeneral_LblSeconds {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblSeconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Tip: Double-click these fields to browse.
        /// </summary>
        internal static string ServiceGeneral_LblTip1 {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblTip1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Tip: Double-click to generate random.
        /// </summary>
        internal static string ServiceGeneral_LblTip2 {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblTip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Version.
        /// </summary>
        internal static string ServiceGeneral_LblVersionInfo {
            get {
                return ResourceManager.GetString("ServiceGeneral_LblVersionInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An error occurred whilst saving, check the logs for more information..
        /// </summary>
        internal static string ServiceGeneral_SavingFailedMessageBox {
            get {
                return ResourceManager.GetString("ServiceGeneral_SavingFailedMessageBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Stored!.
        /// </summary>
        internal static string ServiceGeneral_Stored {
            get {
                return ResourceManager.GetString("ServiceGeneral_Stored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Storing an empty auth ID will allow all HASS.Agent to access the service.
        ///
        ///Are you sure you want this?.
        /// </summary>
        internal static string ServiceGeneral_TbAuthId_MessageBox1 {
            get {
                return ResourceManager.GetString("ServiceGeneral_TbAuthId_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à unable to open Service Manager.
        /// </summary>
        internal static string ServiceHelper_ChangeStartMode_Error1 {
            get {
                return ResourceManager.GetString("ServiceHelper_ChangeStartMode_Error1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à unable to open service.
        /// </summary>
        internal static string ServiceHelper_ChangeStartMode_Error2 {
            get {
                return ResourceManager.GetString("ServiceHelper_ChangeStartMode_Error2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error configuring startup mode, please check the logs for more information..
        /// </summary>
        internal static string ServiceHelper_ChangeStartMode_Error3 {
            get {
                return ResourceManager.GetString("ServiceHelper_ChangeStartMode_Error3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error setting startup mode, please check the logs for more information..
        /// </summary>
        internal static string ServiceHelper_ChangeStartMode_Error4 {
            get {
                return ResourceManager.GetString("ServiceHelper_ChangeStartMode_Error4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Copy from &amp;HASS.Agent.
        /// </summary>
        internal static string ServiceMqtt_BtnCopy {
            get {
                return ResourceManager.GetString("ServiceMqtt_BtnCopy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Clear Configuration.
        /// </summary>
        internal static string ServiceMqtt_BtnMqttClearConfig {
            get {
                return ResourceManager.GetString("ServiceMqtt_BtnMqttClearConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Send &amp;&amp; Activate Configuration.
        /// </summary>
        internal static string ServiceMqtt_BtnStore {
            get {
                return ResourceManager.GetString("ServiceMqtt_BtnStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An error occurred whilst saving the configuration, please check the logs for more information..
        /// </summary>
        internal static string ServiceMqtt_BtnStore_MessageBox1 {
            get {
                return ResourceManager.GetString("ServiceMqtt_BtnStore_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Storing and registering, please wait...
        /// </summary>
        internal static string ServiceMqtt_BtnStore_Storing {
            get {
                return ResourceManager.GetString("ServiceMqtt_BtnStore_Storing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Allow Untrusted Certificates.
        /// </summary>
        internal static string ServiceMqtt_CbAllowUntrustedCertificates {
            get {
                return ResourceManager.GetString("ServiceMqtt_CbAllowUntrustedCertificates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;TLS.
        /// </summary>
        internal static string ServiceMqtt_CbMqttTls {
            get {
                return ResourceManager.GetString("ServiceMqtt_CbMqttTls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Use &amp;Retain Flag.
        /// </summary>
        internal static string ServiceMqtt_CbUseRetainFlag {
            get {
                return ResourceManager.GetString("ServiceMqtt_CbUseRetainFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Broker IP Address or Hostname.
        /// </summary>
        internal static string ServiceMqtt_LblBrokerIp {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblBrokerIp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Password.
        /// </summary>
        internal static string ServiceMqtt_LblBrokerPassword {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblBrokerPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Port.
        /// </summary>
        internal static string ServiceMqtt_LblBrokerPort {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblBrokerPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Username.
        /// </summary>
        internal static string ServiceMqtt_LblBrokerUsername {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblBrokerUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client Certificate.
        /// </summary>
        internal static string ServiceMqtt_LblClientCert {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblClientCert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client ID.
        /// </summary>
        internal static string ServiceMqtt_LblClientId {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Discovery Prefix.
        /// </summary>
        internal static string ServiceMqtt_LblDiscoPrefix {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblDiscoPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Commands and sensors are sent through MQTT. Please provide credentials for your server. If you&apos;re using the HA addon,
        ///you can probably use the preset address..
        /// </summary>
        internal static string ServiceMqtt_LblInfo1 {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Root Certificate.
        /// </summary>
        internal static string ServiceMqtt_LblRootCert {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblRootCert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Querying...
        /// </summary>
        internal static string ServiceMqtt_LblStatus {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Status.
        /// </summary>
        internal static string ServiceMqtt_LblStatusInfo {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblStatusInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Configuration stored!.
        /// </summary>
        internal static string ServiceMqtt_LblStored {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblStored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à (leave default if not sure).
        /// </summary>
        internal static string ServiceMqtt_LblTip1 {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblTip1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à (leave empty to auto generate).
        /// </summary>
        internal static string ServiceMqtt_LblTip2 {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblTip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Tip: Double-click these fields to browse.
        /// </summary>
        internal static string ServiceMqtt_LblTip3 {
            get {
                return ResourceManager.GetString("ServiceMqtt_LblTip3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Configuration missing.
        /// </summary>
        internal static string ServiceMqtt_SetMqttStatus_ConfigError {
            get {
                return ResourceManager.GetString("ServiceMqtt_SetMqttStatus_ConfigError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Connected.
        /// </summary>
        internal static string ServiceMqtt_SetMqttStatus_Connected {
            get {
                return ResourceManager.GetString("ServiceMqtt_SetMqttStatus_Connected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Connecting...
        /// </summary>
        internal static string ServiceMqtt_SetMqttStatus_Connecting {
            get {
                return ResourceManager.GetString("ServiceMqtt_SetMqttStatus_Connecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disconnected.
        /// </summary>
        internal static string ServiceMqtt_SetMqttStatus_Disconnected {
            get {
                return ResourceManager.GetString("ServiceMqtt_SetMqttStatus_Disconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error.
        /// </summary>
        internal static string ServiceMqtt_SetMqttStatus_Error {
            get {
                return ResourceManager.GetString("ServiceMqtt_SetMqttStatus_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error fetching status, please check logs for information..
        /// </summary>
        internal static string ServiceMqtt_StatusError {
            get {
                return ResourceManager.GetString("ServiceMqtt_StatusError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please wait while the satellite service is re-installed...
        /// </summary>
        internal static string ServiceReinstall_LblInfo1 {
            get {
                return ResourceManager.GetString("ServiceReinstall_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Remove Satellite Service.
        /// </summary>
        internal static string ServiceReinstall_LblTask1 {
            get {
                return ResourceManager.GetString("ServiceReinstall_LblTask1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Install Satellite Service.
        /// </summary>
        internal static string ServiceReinstall_LblTask2 {
            get {
                return ResourceManager.GetString("ServiceReinstall_LblTask2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Not all steps completed successfully, please check the logs for more information..
        /// </summary>
        internal static string ServiceReinstall_ProcessReinstall_MessageBox1 {
            get {
                return ResourceManager.GetString("ServiceReinstall_ProcessReinstall_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent Reinstall Satellite Service.
        /// </summary>
        internal static string ServiceReinstall_Title {
            get {
                return ResourceManager.GetString("ServiceReinstall_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Add New.
        /// </summary>
        internal static string ServiceSensors_BtnAdd {
            get {
                return ResourceManager.GetString("ServiceSensors_BtnAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Modify.
        /// </summary>
        internal static string ServiceSensors_BtnModify {
            get {
                return ResourceManager.GetString("ServiceSensors_BtnModify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Remove.
        /// </summary>
        internal static string ServiceSensors_BtnRemove {
            get {
                return ResourceManager.GetString("ServiceSensors_BtnRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Send &amp;&amp; Activate Sensors.
        /// </summary>
        internal static string ServiceSensors_BtnStore {
            get {
                return ResourceManager.GetString("ServiceSensors_BtnStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An error occurred whilst saving the sensors, please check the logs for more information..
        /// </summary>
        internal static string ServiceSensors_BtnStore_MessageBox1 {
            get {
                return ResourceManager.GetString("ServiceSensors_BtnStore_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Storing and registering, please wait...
        /// </summary>
        internal static string ServiceSensors_BtnStore_Storing {
            get {
                return ResourceManager.GetString("ServiceSensors_BtnStore_Storing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Name.
        /// </summary>
        internal static string ServiceSensors_ClmName {
            get {
                return ResourceManager.GetString("ServiceSensors_ClmName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Type.
        /// </summary>
        internal static string ServiceSensors_ClmType {
            get {
                return ResourceManager.GetString("ServiceSensors_ClmType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Refresh.
        /// </summary>
        internal static string ServiceSensors_LblRefresh {
            get {
                return ResourceManager.GetString("ServiceSensors_LblRefresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sensors stored!.
        /// </summary>
        internal static string ServiceSensors_LblStored {
            get {
                return ResourceManager.GetString("ServiceSensors_LblStored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disable Satellite Service.
        /// </summary>
        internal static string ServiceSetState_Disabled {
            get {
                return ResourceManager.GetString("ServiceSetState_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable Satellite Service.
        /// </summary>
        internal static string ServiceSetState_Enabled {
            get {
                return ResourceManager.GetString("ServiceSetState_Enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please wait while the satellite service is configured...
        /// </summary>
        internal static string ServiceSetState_LblInfo1 {
            get {
                return ResourceManager.GetString("ServiceSetState_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable Satellite Service.
        /// </summary>
        internal static string ServiceSetState_LblTask1 {
            get {
                return ResourceManager.GetString("ServiceSetState_LblTask1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Something went wrong while processing the desired service state.
        ///
        ///Please consult the logs for more information..
        /// </summary>
        internal static string ServiceSetState_ProcessState_MessageBox1 {
            get {
                return ResourceManager.GetString("ServiceSetState_ProcessState_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Start Satellite Service.
        /// </summary>
        internal static string ServiceSetState_Started {
            get {
                return ResourceManager.GetString("ServiceSetState_Started", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Stop Satellite Service.
        /// </summary>
        internal static string ServiceSetState_Stopped {
            get {
                return ResourceManager.GetString("ServiceSetState_Stopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent Configure Satellite Service.
        /// </summary>
        internal static string ServiceSetState_Title {
            get {
                return ResourceManager.GetString("ServiceSetState_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error loading settings:
        ///
        ///{0}.
        /// </summary>
        internal static string SettingsManager_LoadAppSettings_MessageBox1 {
            get {
                return ResourceManager.GetString("SettingsManager_LoadAppSettings_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error storing settings:
        ///
        ///{0}.
        /// </summary>
        internal static string SettingsManager_StoreAppSettings_MessageBox1 {
            get {
                return ResourceManager.GetString("SettingsManager_StoreAppSettings_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error storing initial settings:
        ///
        ///{0}.
        /// </summary>
        internal static string SettingsManager_StoreInitialSettings_MessageBox1 {
            get {
                return ResourceManager.GetString("SettingsManager_StoreInitialSettings_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error loading commands:
        ///
        ///{0}.
        /// </summary>
        internal static string StoredCommands_Load_MessageBox1 {
            get {
                return ResourceManager.GetString("StoredCommands_Load_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error storing commands:
        ///
        ///{0}.
        /// </summary>
        internal static string StoredCommands_Store_MessageBox1 {
            get {
                return ResourceManager.GetString("StoredCommands_Store_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error loading quick actions:
        ///
        ///{0}.
        /// </summary>
        internal static string StoredQuickActions_Load_MessageBox1 {
            get {
                return ResourceManager.GetString("StoredQuickActions_Load_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error storing quick actions:
        ///
        ///{0}.
        /// </summary>
        internal static string StoredQuickActions_Store_MessageBox1 {
            get {
                return ResourceManager.GetString("StoredQuickActions_Store_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error loading sensors:
        ///
        ///{0}.
        /// </summary>
        internal static string StoredSensors_Load_MessageBox1 {
            get {
                return ResourceManager.GetString("StoredSensors_Load_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error storing sensors:
        ///
        ///{0}.
        /// </summary>
        internal static string StoredSensors_Store_MessageBox1 {
            get {
                return ResourceManager.GetString("StoredSensors_Store_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ApplicationStarted.
        /// </summary>
        internal static string SystemStateEvent_ApplicationStarted {
            get {
                return ResourceManager.GetString("SystemStateEvent_ApplicationStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ConsoleConnect.
        /// </summary>
        internal static string SystemStateEvent_ConsoleConnect {
            get {
                return ResourceManager.GetString("SystemStateEvent_ConsoleConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ConsoleDisconnect.
        /// </summary>
        internal static string SystemStateEvent_ConsoleDisconnect {
            get {
                return ResourceManager.GetString("SystemStateEvent_ConsoleDisconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HassAgentSatelliteServiceStarted.
        /// </summary>
        internal static string SystemStateEvent_HassAgentSatelliteServiceStarted {
            get {
                return ResourceManager.GetString("SystemStateEvent_HassAgentSatelliteServiceStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HassAgentStarted.
        /// </summary>
        internal static string SystemStateEvent_HassAgentStarted {
            get {
                return ResourceManager.GetString("SystemStateEvent_HassAgentStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Logoff.
        /// </summary>
        internal static string SystemStateEvent_Logoff {
            get {
                return ResourceManager.GetString("SystemStateEvent_Logoff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à RemoteConnect.
        /// </summary>
        internal static string SystemStateEvent_RemoteConnect {
            get {
                return ResourceManager.GetString("SystemStateEvent_RemoteConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à RemoteDisconnect.
        /// </summary>
        internal static string SystemStateEvent_RemoteDisconnect {
            get {
                return ResourceManager.GetString("SystemStateEvent_RemoteDisconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Resume.
        /// </summary>
        internal static string SystemStateEvent_Resume {
            get {
                return ResourceManager.GetString("SystemStateEvent_Resume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SessionLock.
        /// </summary>
        internal static string SystemStateEvent_SessionLock {
            get {
                return ResourceManager.GetString("SystemStateEvent_SessionLock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SessionLogoff.
        /// </summary>
        internal static string SystemStateEvent_SessionLogoff {
            get {
                return ResourceManager.GetString("SystemStateEvent_SessionLogoff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SessionLogon.
        /// </summary>
        internal static string SystemStateEvent_SessionLogon {
            get {
                return ResourceManager.GetString("SystemStateEvent_SessionLogon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SessionRemoteControl.
        /// </summary>
        internal static string SystemStateEvent_SessionRemoteControl {
            get {
                return ResourceManager.GetString("SystemStateEvent_SessionRemoteControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SessionUnlock.
        /// </summary>
        internal static string SystemStateEvent_SessionUnlock {
            get {
                return ResourceManager.GetString("SystemStateEvent_SessionUnlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Suspend.
        /// </summary>
        internal static string SystemStateEvent_Suspend {
            get {
                return ResourceManager.GetString("SystemStateEvent_Suspend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SystemShutdown.
        /// </summary>
        internal static string SystemStateEvent_SystemShutdown {
            get {
                return ResourceManager.GetString("SystemStateEvent_SystemShutdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unable to prepare downloading the update, check the logs for more info.
        ///
        ///The release page will now open instead..
        /// </summary>
        internal static string UpdateManager_DownloadAndExecuteUpdate_MessageBox1 {
            get {
                return ResourceManager.GetString("UpdateManager_DownloadAndExecuteUpdate_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unable to download the update, check the logs for more info.
        ///
        ///The release page will now open instead..
        /// </summary>
        internal static string UpdateManager_DownloadAndExecuteUpdate_MessageBox2 {
            get {
                return ResourceManager.GetString("UpdateManager_DownloadAndExecuteUpdate_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The downloaded file FAILED the certificate check.
        ///
        ///This could be a technical error, but also a tampered file!
        ///
        ///Please check the logs, and post a ticket with the findings..
        /// </summary>
        internal static string UpdateManager_DownloadAndExecuteUpdate_MessageBox3 {
            get {
                return ResourceManager.GetString("UpdateManager_DownloadAndExecuteUpdate_MessageBox3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unable to launch the installer (did you approve the UAC prompt?), check the logs for more info.
        ///
        ///The release page will now open instead..
        /// </summary>
        internal static string UpdateManager_DownloadAndExecuteUpdate_MessageBox4 {
            get {
                return ResourceManager.GetString("UpdateManager_DownloadAndExecuteUpdate_MessageBox4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error fetching info, please check logs for more information..
        /// </summary>
        internal static string UpdateManager_GetLatestVersionInfo_Error {
            get {
                return ResourceManager.GetString("UpdateManager_GetLatestVersionInfo_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Fetching info, please wait...
        /// </summary>
        internal static string UpdatePending_BtnDownload {
            get {
                return ResourceManager.GetString("UpdatePending_BtnDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Processing...
        /// </summary>
        internal static string UpdatePending_BtnDownload_Processing {
            get {
                return ResourceManager.GetString("UpdatePending_BtnDownload_Processing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Ignore Update.
        /// </summary>
        internal static string UpdatePending_BtnIgnore {
            get {
                return ResourceManager.GetString("UpdatePending_BtnIgnore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Install Beta Release.
        /// </summary>
        internal static string UpdatePending_InstallBetaRelease {
            get {
                return ResourceManager.GetString("UpdatePending_InstallBetaRelease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Install Update.
        /// </summary>
        internal static string UpdatePending_InstallUpdate {
            get {
                return ResourceManager.GetString("UpdatePending_InstallUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Release notes.
        /// </summary>
        internal static string UpdatePending_LblInfo1 {
            get {
                return ResourceManager.GetString("UpdatePending_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à There&apos;s a new release available:.
        /// </summary>
        internal static string UpdatePending_LblNewReleaseInfo {
            get {
                return ResourceManager.GetString("UpdatePending_LblNewReleaseInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Release Page.
        /// </summary>
        internal static string UpdatePending_LblRelease {
            get {
                return ResourceManager.GetString("UpdatePending_LblRelease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Do you want to &amp;download and launch the installer?.
        /// </summary>
        internal static string UpdatePending_LblUpdateQuestion_Download {
            get {
                return ResourceManager.GetString("UpdatePending_LblUpdateQuestion_Download", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Do you want to &amp;navigate to the release page?.
        /// </summary>
        internal static string UpdatePending_LblUpdateQuestion_Navigate {
            get {
                return ResourceManager.GetString("UpdatePending_LblUpdateQuestion_Navigate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Processing request, please wait...
        /// </summary>
        internal static string UpdatePending_LblUpdateQuestion_Processing {
            get {
                return ResourceManager.GetString("UpdatePending_LblUpdateQuestion_Processing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à There&apos;s a new BETA release available:.
        /// </summary>
        internal static string UpdatePending_NewBetaRelease {
            get {
                return ResourceManager.GetString("UpdatePending_NewBetaRelease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Open Beta Release Page.
        /// </summary>
        internal static string UpdatePending_OpenBetaReleasePage {
            get {
                return ResourceManager.GetString("UpdatePending_OpenBetaReleasePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Open Release Page.
        /// </summary>
        internal static string UpdatePending_OpenReleasePage {
            get {
                return ResourceManager.GetString("UpdatePending_OpenReleasePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent Update.
        /// </summary>
        internal static string UpdatePending_Title {
            get {
                return ResourceManager.GetString("UpdatePending_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HASS.Agent BETA Update.
        /// </summary>
        internal static string UpdatePending_Title_Beta {
            get {
                return ResourceManager.GetString("UpdatePending_Title_Beta", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à AcceptsNotifications.
        /// </summary>
        internal static string UserNotificationState_AcceptsNotifications {
            get {
                return ResourceManager.GetString("UserNotificationState_AcceptsNotifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Busy.
        /// </summary>
        internal static string UserNotificationState_Busy {
            get {
                return ResourceManager.GetString("UserNotificationState_Busy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à NotPresent.
        /// </summary>
        internal static string UserNotificationState_NotPresent {
            get {
                return ResourceManager.GetString("UserNotificationState_NotPresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à PresentationMode.
        /// </summary>
        internal static string UserNotificationState_PresentationMode {
            get {
                return ResourceManager.GetString("UserNotificationState_PresentationMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à QuietTime.
        /// </summary>
        internal static string UserNotificationState_QuietTime {
            get {
                return ResourceManager.GetString("UserNotificationState_QuietTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à RunningDirect3dFullScreen.
        /// </summary>
        internal static string UserNotificationState_RunningDirect3dFullScreen {
            get {
                return ResourceManager.GetString("UserNotificationState_RunningDirect3dFullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à RunningWindowsStoreApp.
        /// </summary>
        internal static string UserNotificationState_RunningWindowsStoreApp {
            get {
                return ResourceManager.GetString("UserNotificationState_RunningWindowsStoreApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Microsoft&apos;s WebView2 runtime isn&apos;t found on your machine. Usually this is handled by the installer, but you can install it manually.
        ///
        ///Do you want to download the runtime installer?.
        /// </summary>
        internal static string WebView_InitializeAsync_MessageBox1 {
            get {
                return ResourceManager.GetString("WebView_InitializeAsync_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Something went wrong while initializing the WebView! Please check your logs and open a GitHub issue for further assistance..
        /// </summary>
        internal static string WebView_InitializeAsync_MessageBox2 {
            get {
                return ResourceManager.GetString("WebView_InitializeAsync_MessageBox2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à WebView.
        /// </summary>
        internal static string WebView_Title {
            get {
                return ResourceManager.GetString("WebView_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Save.
        /// </summary>
        internal static string WebViewCommandConfig_BtnSave {
            get {
                return ResourceManager.GetString("WebViewCommandConfig_BtnSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;Always show centered in screen.
        /// </summary>
        internal static string WebViewCommandConfig_CbCenterScreen {
            get {
                return ResourceManager.GetString("WebViewCommandConfig_CbCenterScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Show the window&apos;s &amp;title bar.
        /// </summary>
        internal static string WebViewCommandConfig_CbShowTitleBar {
            get {
                return ResourceManager.GetString("WebViewCommandConfig_CbShowTitleBar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Set window as &apos;Always on &amp;Top&apos;.
        /// </summary>
        internal static string WebViewCommandConfig_CbTopMost {
            get {
                return ResourceManager.GetString("WebViewCommandConfig_CbTopMost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Drag and resize this window to set the size and location of your webview command..
        /// </summary>
        internal static string WebViewCommandConfig_LblInfo1 {
            get {
                return ResourceManager.GetString("WebViewCommandConfig_LblInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Location.
        /// </summary>
        internal static string WebViewCommandConfig_LblLocation {
            get {
                return ResourceManager.GetString("WebViewCommandConfig_LblLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Size.
        /// </summary>
        internal static string WebViewCommandConfig_LblSize {
            get {
                return ResourceManager.GetString("WebViewCommandConfig_LblSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Tip: Press ESCAPE to close a WebView..
        /// </summary>
        internal static string WebViewCommandConfig_LblTip1 {
            get {
                return ResourceManager.GetString("WebViewCommandConfig_LblTip1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;URL.
        /// </summary>
        internal static string WebViewCommandConfig_LblUrl {
            get {
                return ResourceManager.GetString("WebViewCommandConfig_LblUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unable to load the stored command settings, resetting to default..
        /// </summary>
        internal static string WebViewCommandConfig_SetStoredVariables_MessageBox1 {
            get {
                return ResourceManager.GetString("WebViewCommandConfig_SetStoredVariables_MessageBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à WebView Configuration.
        /// </summary>
        internal static string WebViewCommandConfig_Title {
            get {
                return ResourceManager.GetString("WebViewCommandConfig_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Hidden.
        /// </summary>
        internal static string WindowState_Hidden {
            get {
                return ResourceManager.GetString("WindowState_Hidden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Maximized.
        /// </summary>
        internal static string WindowState_Maximized {
            get {
                return ResourceManager.GetString("WindowState_Maximized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Minimized.
        /// </summary>
        internal static string WindowState_Minimized {
            get {
                return ResourceManager.GetString("WindowState_Minimized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Normal.
        /// </summary>
        internal static string WindowState_Normal {
            get {
                return ResourceManager.GetString("WindowState_Normal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unknown.
        /// </summary>
        internal static string WindowState_Unknown {
            get {
                return ResourceManager.GetString("WindowState_Unknown", resourceCulture);
            }
        }
    }
}
